{"version":3,"sources":["assets/images/colored-icon.svg","types.ts","utils/translate/translateService.ts","components/pages/About.tsx","constants.ts","context.tsx","components/shared/InformationIcon.tsx","utils/translate/caseChanger.ts","utils/mapUtils.ts","components/sidebar/right-sidebar/Filters.tsx","httpClient.ts","components/sidebar/left-sidebar/TotalStats.tsx","metaAnalysis.ts","components/sidebar/left-sidebar/CountryList.tsx","components/charts/StudyDetailsModal.tsx","components/charts/ReferencesTable.tsx","components/charts/Charts.tsx","components/map/Legend.tsx","components/map/Map.tsx","components/pages/Dashboard/CenterComponent.tsx","components/sidebar/right-sidebar/date-slider/Handle.tsx","components/sidebar/right-sidebar/date-slider/SliderRail.tsx","components/sidebar/right-sidebar/date-slider/Tick.tsx","components/sidebar/right-sidebar/date-slider/Track.tsx","components/sidebar/right-sidebar/date-slider/Slider.tsx","components/sidebar/right-sidebar/LastUpdated.tsx","components/mobile/MobileComponents.tsx","components/sidebar/left-sidebar/LeftSidebar.tsx","components/sidebar/right-sidebar/RightSidebar.tsx","components/pages/Dashboard/Dashboard.tsx","components/pages/Data.tsx","components/shared/NavBar.tsx","App.tsx","serviceWorker.js","utils/analyticsUtils.tsx","index.js"],"names":["module","exports","LanguageType","AggregationFactor","recursiveFind","object","keys","index","nextObj","length","language","english","Translate","text","specifier","substitution","addSpaces","translationDictionary","English","French","translatedString","Object","forEach","key","value","replace","RegExp","e","About","isMobileDeviceOrTablet","useMediaQuery","maxWidth","selectItem","label","name","ReactGA","event","category","action","selectLink","link","renderBioBlock","description","linkedIn","email","twitter","map","line","href","onClick","target","rel","icon","faLinkedin","className","faTwitter","faEnvelope","src","alt","height","toLowerCase","AppContext","createContext","getEmptyFilters","source_type","Set","study_status","test_type","country","population_group","sex","age","risk_of_bias","isotypes_reported","specimen_type","publish_date","add","initialState","healthcheck","airtable_records","filtered_records","filters","filter_options","data_page_state","mapOpen","updated_at","country_prevalences","filterRecords","records","filter_function","record","filter_key","size","Array","isArray","match","item","includes","publishDate","dateInMillis","Date","parse","dates","from","values","in_filter","i","has","buildFilterFunction","filter","getFilterOptions","seroprevalence","denominator","isotype_reported","reducer","state","new_filters","type","payload","filter_type","filter_value","AppContextProvider","props","useReducer","dispatch","Provider","children","InformationIcon","color","tooltip","tooltipHeader","offset","position","popupSize","Popup","Math","random","onOpen","popperModifiers","preventOverflow","boundariesElement","trigger","faInfoCircle","Header","Content","toPascalCase","str","_","upperFirst","camelCase","getLogit","percentage","decimal","log","getDecimalFromLogit","logit","exp","colors","getColor","d","buckets","Countries","getCountryName","optionString","code","translatedCountryName","Filters","useContext","formatOptions","options","formatted_options","toString","jsonObjectString","o","push","alternativeString","buildSectionHeader","header_text","tooltip_text","tooltip_header","buildFilterDropdown","placeholder","Dropdown","fluid","multiple","search","clearable","selection","onChange","data","addFilter","defaultValue","toUpperCase","httpClient","url","url_full","process","fetch","res","status","error_msg","json","console","error","response_json","method","headers","body","JSON","stringify","this","httpGet","response","source_name","SOURCE_NAME","lead_org","LEAD_ORG","first_author","FIRST_AUTHOR","SOURCE_TYPE","STUDY_STATUS","study_type","STUDY_TYPE","TEST_TYPE","SPECIMEN_TYPE","ISOTYPES","manufacturer","MANUFACTURER","approving_regulator","APPROVAL","sensitivity","SENSITIVITY","specificity","SPECIFICITY","PUB_DATE","publisher","PUBLISHER","COUNTRY","STATE","city","CITY","POPULATION_GROUP","SEX","AGE","DENOMINATOR","summary","SUMMARY","SERUM_POS_PREVALENCE","sample_size","SAMPLE_SIZE","sampling_method","SAMPLING","sampling_start_date","SAMPLING_START","sampling_end_date","SAMPLING_END","OVERALL_RISK_OF_BIAS","URL","include_in_n","INCLUDE_IN_N","updated_at_words","split","updated_at_string","join","aggregation_variable","meta_analysis_technique","meta_analysis_transformation","formatted_agg_var","formatted_records","req_body","httpPost","formatted_response","error_percent","n","total_N","num_studies","n_studies","seroprevalence_percent","countries","TotalStats","useState","setNumCountries","setSeroprevalence","setN","useEffect","a","api","postMetaAnalysisAll","results","updateCountryPrevalence","toFixed","CountryList","aggregatedData","sortBy","reverse","StudyDetailsModal","open","setOpen","getPossibleNullString","nullString","undefined","getPossibleNullStringArray","Modal","centered","closeOnEscape","closeOnDimmerClick","onClose","style","marginTop","marginLeft","marginRight","top","left","Button","padding","faTimes","Description","to","getAuthorString","date","getPublishString","ReferencesTable","activePage","setActivePage","boundaryRange","siblingRange","totalPages","setTotalPages","pageLength","setPageLength","column","setColumn","direction","setDirection","setData","pageLengthOptions","isMobileDevice","splicedData","orderBy","splice","ceil","buildHeaderCell","sortColumn","displayName","Table","HeaderCell","sorted","clickedColumn","celled","sortable","fixed","striped","Row","Body","Cell","getGeography","displaySex","displayAge","getPopulation","Footer","Pagination","onPageChange","inline","Charts","yAxisSelection","setYAxis","setRecords","yAxisOptions","postMetaAnalysis","reAggregatedRecords","chartData","updateCharts","CustomTooltip","active","recordError","find","width","layout","barGap","strokeDasharray","right","dataKey","interval","longestWord","getYAxisWidth","content","fill","maxBarSize","barSize","x","y","errorBarWidth","textAnchor","dominantBaseline","strokeWidth","Legend","labels","background","Map","mapRef","createRef","geoJsonRef","mapRecords","setMapRecords","forceUpdate","setForceUpdate","features","maxSeroprevalence","max","apply","properties","roundedMax","step","logitStep","parseFloat","getBuckets","prevalenceCountryDict","reduce","importGeo","feature","initImportGeo","bounds","latLngBounds","maxBounds","ref","center","zoom","bounceAtZoomLimits","minZoom","enableHighAccuracy","maxBoundsViscosity","TileLayer","attribution","tileSize","id","zoomOffset","GeoJSON","onEachFeature","layer","bindPopup","ReactDOMServer","renderToString","createPopup","closeButton","autoPan","on","mouseover","openPopup","setStyle","weight","dashArray","fillOpacity","zIndex","bringToFront","highlightFeature","mouseout","closePopup","opacity","resetHighlight","mousemove","getPopup","setLatLng","latlng","click","current","leafletElement","fitBounds","getBounds","zoomToFeature","fillColor","CentralPiece","clickButton","getClass","shouldHighlight","Handle","domain","min","handle","percent","getHandleProps","disabled","role","aria-valuemin","aria-valuemax","aria-valuenow","SliderRail","getRailProps","Tick","tick","count","Track","source","getTrackProps","DateRangeSlider","endMoment","getTime","displayStartDate","setStartDate","displayEndDate","setEndDate","startBound","setStartBound","endBound","startDate","sort","b","customTicks","endDate","monthRange","start","end","startTime","timeElapsed","monthsElapsed","startMonth","getMonth","range","month","year","getFullYear","floor","getTimeRange","totalCount","todayTick","localeDate","monthTicks","toLocaleDateString","createTicks","mode","handles","tracks","ticks","tickItem","defaultProps","LastUpdated","MobileComponents","showMobileFilters","setShowFilters","showSummary","setShowSummary","handleFilterToggle","showMobile","Sidebar","Pushable","as","Segment","Menu","animation","vertical","visible","fontWeight","Pusher","faFilter","faBars","LeftSidebar","RightSidebar","Dashboard","maxDeviceWidth","countryPrevalences","Data","renderPane","Tab","Pane","title","clickLink","panes","menuItem","render","toLocaleLowerCase","NavBar","tab","setTab","getTabClass","tabName","location","useLocation","pathname","usePageViews","MultiColorIcon","faGlobeAmericas","faFileAlt","faUsers","App","getAirtableRecords","handleResize","vh","window","innerHeight","document","documentElement","setProperty","addEventListener","path","exact","Boolean","hostname","sendPageView","set","page","pageview","GAListener","trackingId","history","useHistory","initialize","titleCase","gaOptions","cookieDomain","listen","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d06ca335.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/colored-icon.ab2ccbe8.svg\";","\nexport type AirtableRecord = {\n    source_name: string | null,\n    lead_org?: string | null,\n    first_author?: string | null,\n    source_type: string | null,\n    study_status: string | null,\n    test_type: string[] | null,\n    specimen_type: string | null,\n    isotypes_reported: string[] | null,\n    manufacturer?: string | null,\n    approving_regulator?: string | null,\n    sensitivity?: number | null,\n    specificity?: number | null,\n    country: string | null,\n    state?: string[] | null,\n    city?: string[] | null,\n    population_group: string[] | null,\n    sex: string | null,\n    age: string[] | null,\n    denominator: number | null,\n    seroprevalence: number | null,\n    publish_date?: string[] | string | null,\n    publisher?: string | null,\n    risk_of_bias: string | null,\n    study_type?: string | null,\n    sample_size?: string | null,\n    sampling_method?: string | null,\n    sampling_start_date?: string | null,\n    sampling_end_date?: string | null,\n    summary?: string | null,\n    url?: string | null,\n    include_in_n: boolean\n};\n\nexport type AggregatedRecord = {\n    error: number[];\n    n: number;\n    name: string;\n    num_studies: number;\n    seroprevalence: number;\n}\n\n// Each filter will be a javascript set\n// TODO: find typing to represent sets\nexport type Filters = {\n    source_type: any,\n    study_status: any,\n    test_type: any,\n    country: any,\n    population_group: any,\n    sex: any,\n    age: any,\n    risk_of_bias: any,\n    isotypes_reported: any,\n    specimen_type: any\n    publish_date: any\n};\n\nexport type FilterType =  'country' | 'population_group' | 'sex' | 'age' | 'study_status' | 'test_type' | 'source_type' | 'risk_of_bias' | 'isotypes_reported' | 'specimen_type';\n\nexport enum LanguageType  {\n  french = 'fr',\n  english ='en' \n}\n\nexport type State = {\n    healthcheck: string,\n    airtable_records: AirtableRecord[],\n    filtered_records: AirtableRecord[],\n    filters: Filters,\n    filter_options: Filters,\n    updated_at: string,\n    data_page_state: DataPageState,\n    language: LanguageType,\n    country_prevalences: AggregatedRecord[]\n};\n\nexport enum AggregationFactor {\n    country = 'country',\n    population_group = 'population_group',\n    sex = 'sex',\n    age = 'age',\n    study_status = 'study_status',\n    test_type = 'test_type',\n    source_type = 'source_type',\n    risk_of_bias = 'risk_of_bias',\n    isotypes_reported = 'isotypes_reported',\n}\n\nexport type DataPageState = {\n    mapOpen: boolean\n}\n\nexport type CustomMatcherResult = {\n    pass: boolean\n    message: string \n}\n","import { LanguageType } from \"../../types\";\nimport English from './en.json';\nimport French from './fr.json';\n\ninterface TranslateStringProps {\n  text: string;\n}\n\n// Recursive Typings for nested JSON objects\ntype JsonRecord<T> = Record<string, T | string>;\ninterface Json extends JsonRecord<Json> { };\n\nconst recursiveFind = (object: any, keys: string[], index: number): string => {\n  const key = keys[index];\n  const nextObj = object[key];\n\n  if (index + 1 === keys.length) {\n    return nextObj;\n  }\n  return recursiveFind(nextObj, keys, index + 1);\n\n}\n\nlet language: LanguageType = LanguageType.english;\n\nexport const setLanguageType = (newLanguage: LanguageType) => {\n  language = newLanguage;\n}\n\nexport default function Translate(\n  text: string,\n  specifier: string[] | null = null,\n  substitution: Record<string, string | number> | null = null,\n  addSpaces: [boolean, boolean] | null = null\n): string {\n  const translationDictionary: Json = language === LanguageType.english ?\n    English as Json : French as Json;\n\n  try {\n    let translatedString = translationDictionary[text];\n\n    if (!translatedString) {\n      return (specifier ? specifier[specifier.length - 1] : text) + \"*\";\n    }\n\n    if (specifier) {\n      translatedString = recursiveFind(translatedString, specifier, 0);\n    }\n\n    if (substitution) {\n      Object.keys(substitution).forEach(key => {\n        const value = substitution[key];\n        const replace = new RegExp(key, \"g\");\n        translatedString = (translatedString as string).replace(replace, `${value}`);\n      });\n    }\n\n    if (addSpaces && addSpaces[0]) {\n      translatedString = \" \" + translatedString;\n    }\n\n    if (addSpaces && addSpaces[1]) {\n      translatedString += \" \";\n    }\n    return translatedString as string;\n  }\n  catch (e) {\n    return `No translation for string ${text}`\n  }\n}","import { faLinkedin, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\nimport Translate from \"../../utils/translate/translateService\";\nimport './static.css';\nimport ReactGA from 'react-ga';\n\nexport default function About() {\n    const isMobileDeviceOrTablet = useMediaQuery({ maxWidth: mobileDeviceOrTabletWidth })\n\n    const selectItem = (label: string, name: string) => {\n        ReactGA.event({\n            category: 'Social Media Link',\n            action: 'click',\n            label: `${label} - ${name}`\n        })\n    }\n\n    const selectLink = (link: string) => {\n        ReactGA.event({\n            category: 'About Page Link',\n            action: 'click',\n            label: link\n        })\n    }\n\n    function renderBioBlock(name: string,\n        description: string[],\n        linkedIn: string | null = null,\n        email: string | null = null,\n        twitter: string | null = null) {\n        return (\n            <div>\n                <b>\n                    {name}\n                </b>\n                <br />\n                {description.map((line) => {\n                    return (\n                        <div key={line}>\n                            {line}\n                            <br />\n                        </div>\n                    )\n                })}\n                {linkedIn ? <a href={linkedIn} onClick={() => selectItem('LinkedIn', name)} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} className=\"mr-1 linked-in\" /></a> : null}\n                {twitter ? <a href={twitter} onClick={() => selectItem('Twitter', name)} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} className=\"mx-1 twitter\" /></a> : null}\n                {email ? <a href={`mailto:${email}`} onClick={() => selectItem('Email', name)}><FontAwesomeIcon icon={faEnvelope} className=\"ml-1 email\" /></a> : null}\n            </div>\n        )\n    }\n    return (\n        <div className=\"page col-12\">\n            <div className={isMobileDeviceOrTablet ? \"pb-2\" : \"static-content pb-2\"}>\n                <h1>\n                    {Translate('AboutSeroTracker')}\n                </h1>\n                <p>\n                    {Translate('AboutPage', ['AboutSection', 'PartOne'])}<b>{Translate('AboutPage', ['AboutSection', 'PartTwo'], null, [true, false])}</b>\n                </p>\n                <p>\n                    <a href=\"https://www.covid19immunitytaskforce.ca/\">\n                        <img src=\"https://www.covid19immunitytaskforce.ca/wp-content/themes/pena-lite-child/CITF_logo_ENG.svg\" alt=\"COVID-19 Immunity Task Force Logo\" height=\"45\"></img>\n                    </a>\n                </p>\n                <p>\n                    {Translate('AboutPage', ['AboutSection', 'PartThree'])}\n                    <a onClick={() => selectLink('ITF Website')} href=\"https://www.covid19immunitytaskforce.ca/\">{Translate('AboutPage', ['AboutSection', 'PartFour'], null, [true, true])}</a>\n                    {Translate('AboutPage', ['AboutSection', 'PartFive'])}\n                    <a onClick={() => selectLink('McGill Website')} href=\"https://www.mcgill.ca/spgh/\">{Translate('AboutPage', ['AboutSection', 'PartSix'], null, [true, false])}</a>.\n                     {Translate('AboutPage', ['AboutSection', 'PartSeven'], null, [true, false])}\n                    <a onClick={() => selectLink('Serological Hub')} href=\"https://www.covid19immunitytaskforce.ca/research/global-serological-knowledge-hub/\">{Translate('AboutPage', ['AboutSection', 'PartEight'], null, [true, false])}</a>.\n                </p>\n                <p>\n                    <a onClick={() => selectLink('Mapbox')} href=\"https://www.mapbox.com/\">Mapbox</a> {Translate('AboutPage', ['Mapbox'])}.\n                </p>\n                <h2>\n                    {Translate('ContactUs')}\n                </h2>\n                <p>\n\n                    {Translate('AboutPage', ['ContactSection', 'SectionOne'])}\n                </p>\n                <ul>\n                    <li>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartOne'], null, [true, true])}\n                        <b>{Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartTwo'])}</b>,\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartThree'], null, [true, true])}\n                        <a href=\"mailto:rahul.arora@balliol.ox.ac.uk\">rahul.arora@balliol.ox.ac.uk</a>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartFour'], null, [true, true])}\n                        <a href=\"mailto:tingting.yan@mail.utoronto.ca\">tingting.yan@mail.utoronto.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('For')}<b>{Translate('AboutPage', ['ContactSection', 'BulletPointTwo', 'PartOne'], null, [true, false])}</b>,\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointTwo', 'PartTwo'], null, [true, true])}\n                        <a href=\"mailto:niklas.bobrovitz@mail.utoronto.ca\">niklas.bobrovitz@mail.utoronto.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('For')}<b>{Translate('AboutPage', ['ContactSection', 'BulletPointThree', 'PartOne'], null, [true, false])}</b>,\n                         {Translate('AboutPage', ['ContactSection', 'BulletPointThree', 'PartTwo'], null, [true, true])}\n                        <a href=\"mailto:niduarte@uwaterloo.ca\"> niduarte@uwaterloo.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('For')} <b>{Translate('AboutPage', ['ContactSection', 'BulletPointFour', 'PartOne'], null, [true, false])}</b>,\n                         {Translate('AboutPage', ['ContactSection', 'BulletPointFour', 'PartTwo'], null, [true, true])}\n                        <a href=\"mailto:jordan.vanwyk@uwaterloo.ca\"> jordan.vanwyk@uwaterloo.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointFive', 'PartOne'])}\n                        <b>{Translate('AboutPage', ['ContactSection', 'BulletPointFive', 'PartTwo'], null, [true, false])}</b>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointFive', 'PartThree'], null, [true, true])}\n                        <a onClick={() => selectLink('Form Open')} rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://forms.gle/XWHQ7QPjQnzQMXSz8\">{Translate('ThisForm').toLowerCase()}</a>.\n                    </li>\n                </ul>\n                <h1>\n                    {Translate('OurTeam')}\n                </h1>\n                <h2 className=\"team-name-text\">\n                    {Translate('ScientificLead')}\n                </h2>\n                <div>\n                    {renderBioBlock('Tim Evans', [Translate('TimBiography', ['PartOne']), Translate('TimBiography', ['PartTwo'])])}\n                </div>\n                <h2 className=\"team-name-text\">\n                    {Translate('TeamLead')}\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Rahul Arora', [Translate('ExecutiveDirector'), Translate('UniversityOf', null, { \"NAME\": \"Oxford\" })], 'https://www.linkedin.com/in/rahularorayyc/', 'rahularoradfs@gmail.com', 'https://mobile.twitter.com/RahulAroraAB')}\n                    {renderBioBlock('Tingting Yan', [Translate('CoDirector'), Translate('UniversityOf', null, { \"NAME\": \"Toronto\" })], 'https://www.linkedin.com/in/tingting-yan/', '', 'https://twitter.com/TingtingYan_')}\n                </div>\n                <h2 className=\"team-name-text\">\n                    {Translate('ResearchTeam')}\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Niklas Bobrovitz ', [Translate('UniversityOf', null, { \"NAME\": \"Oxford\" }), Translate('UniversityOf', null, { \"NAME\": \"Toronto\" })], 'https://www.linkedin.com/in/nik-bobrovitz-19a117179/', null, 'https://twitter.com/nikbobrovitz')}\n                    {renderBioBlock('Emily Boucher', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], null, 'emily.boucher@ucalgary.ca')}\n                    {renderBioBlock('Nathan Duarte', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/duartenathan/', 'nathanduarte1@gmail.com', 'https://twitter.com/_nathan_duarte_')}\n                    {renderBioBlock('Hannah Rahim', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://www.linkedin.com/in/hannah-rahim/', null, 'https://twitter.com/Hannah_Rahim1')}\n                    {renderBioBlock('Christian Cao', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://ca.linkedin.com/in/christian-cao-275b78190', 'ccao.canada@gmail.com')}\n                    {renderBioBlock('Claire Donnici', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], null, 'claire.donnici@ucalgary.ca', 'https://twitter.com/ClaireDonnici')}\n                    {renderBioBlock('Natasha Ilincic', [Translate('UniversityOf', null, { \"NAME\": \"Guelph\" })], null, 'natasha.ilincic@gmail.com')}\n                    {renderBioBlock('Michael Liu', [Translate('UniversityOf', null, { \"NAME\": \"Oxford\" }), Translate('BlankUniversity', null, { \"NAME\": \"Harvard\" })], 'https://www.linkedin.com/in/michael-liu-8728249a/', 'liu.michael222@gmail.com', 'https://twitter.com/mliu_canada')}\n                    {renderBioBlock('Brianna Rosgen', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://ca.linkedin.com/in/brianna-rosgen-b12136134', 'Brianna.rosgen@ucalgary.ca', 'https://twitter.com/briannarosgen')}\n                    {renderBioBlock('Mitchell Segal', [Translate('UniversityOf', null, { \"NAME\": \"Toronto\" })], null, 'mitchell.segal@mail.utoronto.ca')}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Development Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Austin Atmaja', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/austinatmaja', null, null)}\n                    {renderBioBlock('Abel Joseph ', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/abel-joseph/', 'abel.joseph@uwaterloo.ca')}\n                    {renderBioBlock('Ewan May', [Translate('SchoolName', ['Schulich']), Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://www.linkedin.com/in/ewan-may', 'ewan.may@ucalgary.ca')}\n                    {renderBioBlock('Simona Rocco', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/simona-rocco/', 'serocco@uwaterloo.ca')}\n                    {renderBioBlock('Jordan Van Wyk', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/jordanvanwyk/', 'jordanvanwyk@outlook.com', 'https://twitter.com/jordanvw_')}\n                    {renderBioBlock('Abhinav Pillai\t', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], null, 'abhinav.arunpillai@ucalgary.ca')}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Economics Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Ruby Zhang', ['Harvard University'], 'https://www.linkedin.com/in/ruby-zhang-022821ab')}\n                    {renderBioBlock('Sahil Bablani ', ['CPP Investment Board'])}\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const mobileDeviceOrTabletWidth = 1200;\r\nexport const mobileDeviceWidth = 600;","import React, { createContext, Dispatch, useReducer } from \"react\";\nimport { AirtableRecord, Filters, State, LanguageType, AggregatedRecord } from \"./types\";\n\nexport const AppContext = createContext({} as [State, Dispatch<Record<string, any>>]);\n\nexport function getEmptyFilters(): Filters {\n  return {\n    source_type: new Set(),\n    study_status: new Set(),\n    test_type: new Set(),\n    country: new Set(),\n    population_group: new Set(),\n    sex: new Set(),\n    age: new Set(),\n    risk_of_bias: new Set(),\n    isotypes_reported: new Set(),\n    specimen_type: new Set(),\n    publish_date: new Set()\n  }\n}\n\n// Note: filters = elements that user has chosen to filter by\n// filter_options = all the elements that users could filter by\nconst initial_filters: Filters = getEmptyFilters();\ninitial_filters.population_group.add(['General population']);\nconst initialState: State = {\n  healthcheck: '',\n  airtable_records: [],\n  filtered_records: [],\n  filters: getEmptyFilters(),\n  filter_options: getEmptyFilters(),\n  data_page_state: {\n    mapOpen: true\n  },\n  language: LanguageType.english,\n  updated_at: '',\n  country_prevalences: []\n};\n\nfunction buildFilterFunction(filters: Record<string, any>) {\n  // Returns a function that can be used to filter an array of airtable records\n  return (record: Record<string, any>) => {\n    for (const filter_key in filters) {\n      if ((filters[filter_key] instanceof Set) && (filters[filter_key].size > 0)) {\n        if (record[filter_key] === null) {\n          return false;\n        }\n        // Handle case where field to be filtered is an array\n        if (Array.isArray(record[filter_key])) {\n          // Note: isotypes filter works on an 'and' basis\n          // Unlike other filters, which work on an 'or' basis\n          // TODO: make logic flow here more generalized in case we need other filters in the future with similar behaviour\n          if (filter_key === 'isotypes_reported') {\n            let match = true;\n            filters[filter_key].forEach((item: string) => {\n              if (!(record[filter_key].includes(item))) {\n                match = false;\n              }\n            });\n            return match;\n          }\n\n          if (filter_key === 'publish_date') {\n            const publishDate = record[filter_key];\n            const dateInMillis = publishDate instanceof Array ? Date.parse(publishDate[0] as string) : Date.parse(publishDate as string)\n            const dates: number[] = Array.from(filters[filter_key].values())\n            return dateInMillis >= dates[0] && dateInMillis <= dates[1]\n          }\n          // Iterate through the record's values and check if any of them\n          // match the values accepted by the filter\n          let in_filter = false;\n          for (let i = 0; i < record[filter_key].length; i++) {\n            if (filters[filter_key].has(record[filter_key][i])) {\n              in_filter = true;\n              break;\n            }\n          }\n          if (!in_filter) {\n            return false;\n          }\n        }\n        else {\n          if (!(filters[filter_key].has(record[filter_key]))) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n}\n\nexport function filterRecords(filters: Filters, records: AirtableRecord[]) {\n  const filter_function = buildFilterFunction(filters);\n  if (records) {\n    const filtered_records = records.filter(filter_function);\n    return filtered_records\n  }\n  return [];\n\n}\n\nfunction getFilterOptions(records: AirtableRecord[]) {\n  const filter_options: Filters = getEmptyFilters();\n\n  if (!records) {\n    return filter_options;\n  }\n  records.forEach((record: AirtableRecord) => {\n    // TODO: Refactor to be more DRY\n    if ((record.seroprevalence !== null) && (record.denominator !== null)) {\n      if (record.country) {\n        filter_options.country.add(record.country);\n      }\n      if (record.study_status) {\n        filter_options.study_status.add(record.study_status);\n      }\n      if (record.source_type) {\n        filter_options.source_type.add(record.source_type);\n      }\n      if (record.sex) {\n        filter_options.sex.add(record.sex);\n      }\n      if (record.risk_of_bias) {\n        filter_options.risk_of_bias.add(record.risk_of_bias);\n      }\n      if (record.test_type) {\n        record.test_type.forEach((test_type) => {\n          filter_options.test_type.add(test_type);\n        })\n      }\n      if (record.population_group) {\n        record.population_group.forEach((population_group) => {\n          filter_options.population_group.add(population_group);\n        });\n      }\n      if (record.age) {\n        record.age.forEach((age) => {\n          filter_options.age.add(age);\n        });\n      }\n      if (record.isotypes_reported) {\n        record.isotypes_reported.forEach((isotype_reported) => {\n          if (isotype_reported !== 'Not reported') {\n            filter_options.isotypes_reported.add(isotype_reported);\n          }\n        });\n      }\n      if (record.specimen_type && record.specimen_type !== 'Not reported') {\n        filter_options.specimen_type.add(record.specimen_type);\n      }\n    }\n  });\n\n  return filter_options;\n}\n\nconst reducer = (state: State, action: Record<string, any>): State => {\n  const new_filters: any = state.filters;\n  switch (action.type) {\n    case \"HEALTHCHECK\":\n      return {\n        ...state,\n        healthcheck: action.payload\n      };\n    case \"SELECT_DATA_TAB\":\n      return {\n        ...state,\n        data_page_state: { ...state.data_page_state, mapOpen: action.payload }\n      }\n    case \"SELECT_LANGUAGE\":\n      return {\n        ...state,\n        language: action.payload\n      }\n    case \"GET_AIRTABLE_RECORDS\":\n      return {\n        ...state,\n        airtable_records: action.payload.airtable_records,\n        filtered_records: filterRecords(state.filters, action.payload.airtable_records),\n        updated_at: action.payload.updated_at,\n        filter_options: getFilterOptions(action.payload.airtable_records)\n      }\n    case \"UPDATE_FILTER\":\n      new_filters[action.payload.filter_type] = new Set(action.payload.filter_value)\n      return {\n        ...state,\n        filters: new_filters,\n        filtered_records: filterRecords(new_filters, state.airtable_records)\n      }\n    case \"UPDATE_COUNTRY_PREVALENCES\":\n      return {\n        ...state,\n        country_prevalences: action.payload\n      }\n    default:\n      return state\n  }\n};\n\nexport const AppContextProvider = (props: Record<string, any>) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider\n      value={[state, dispatch]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};","import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport ReactGA from 'react-ga';\r\n\r\ninterface InformationIconProps {\r\n  color: string;\r\n  size: \"xs\" | \"lg\" | \"sm\" | \"1x\" | \"2x\" | \"3x\" | \"4x\" | \"5x\" | \"6x\" | \"7x\" | \"8x\" | \"9x\" | \"10x\" | undefined,\r\n  position?: \"top left\" | \"top right\" | \"bottom right\" | \"bottom left\" | \"right center\" | \"left center\" | \"top center\" | \"bottom center\" | undefined,\r\n  tooltip: string | React.ReactNode;\r\n  tooltipHeader?: string;\r\n  offset: string | number;\r\n  popupSize?: \"mini\" | \"tiny\" | \"small\" | \"large\" | \"huge\";\r\n}\r\n\r\nexport default function InformationIcon(props: InformationIconProps) {\r\n  const { color, size, tooltip, tooltipHeader, offset, position, popupSize = \"small\" } = props;\r\n  return (\r\n    <div className=\"px-2\">\r\n      <Popup\r\n        key={Math.random()}\r\n        offset={offset}\r\n        position={position}\r\n        size={popupSize}\r\n        onOpen={() => {\r\n          ReactGA.event({\r\n            /** Typically the object that was interacted with (e.g. 'Video') */\r\n            category: 'Tooltip',\r\n            /** The type of interaction (e.g. 'play') */\r\n            action: 'opening',\r\n            /** Useful for categorizing events (e.g. 'Fall Campaign') */\r\n            label: tooltipHeader\r\n            /** A numeric value associated with the event (e.g. 42) */\r\n          })\r\n        }}\r\n        //fix for janky popup positioning due to overflow styling\r\n        popperModifiers={{ preventOverflow: { boundariesElement: \"window\" } }}\r\n        trigger={\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            color={color}\r\n            size={size} />}>\r\n        {tooltipHeader && (\r\n\r\n          <Popup.Header className=\"flex left\">{tooltipHeader}</Popup.Header>\r\n        )}\r\n        <Popup.Content className=\"flex left\">{tooltip}</Popup.Content>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport const toPascalCase = (str: string) => _.upperFirst(_.camelCase(str));","\r\nimport * as Countries from 'i18n-iso-countries';\r\nimport English from \"i18n-iso-countries/langs/en.json\"\r\nimport French from \"i18n-iso-countries/langs/fr.json\"\r\nimport { LanguageType } from \"../types\";\r\nimport { toPascalCase } from './translate/caseChanger';\r\nimport Translate from './translate/translateService';\r\n\r\nexport const getBuckets = (features: GeoJSON.Feature[]) => {\r\n  // This is some javascript voodoo to get maxSeroprevalence\r\n  const maxSeroprevalence = Math.max.apply(Math, features.filter(o => o.properties?.seroprevalence).map((o) => o?.properties?.seroprevalence));\r\n  const roundedMax = Math.ceil(maxSeroprevalence);\r\n  const maxLogit = getLogit(roundedMax);\r\n\r\n  // This is an arbitrary value that I chose because on the logit scale\r\n  // as you decrease in size you approach infinity, not 0\r\n  const lowerEnd = -7;\r\n  const differenceScale = maxLogit - lowerEnd\r\n  const bucketSegments = 6\r\n  const step = differenceScale / bucketSegments;\r\n  const buckets = [0];\r\n  for (let x = 1; x <= 6; x++) {\r\n    const logitStep = parseFloat(getDecimalFromLogit(-7 + step * x).toFixed(1));\r\n    buckets.push(logitStep);\r\n  }\r\n  return buckets;\r\n}\r\n\r\nconst getLogit = (percentage: number) => {\r\n  const decimal = percentage / 100;\r\n  return Math.log(decimal) - Math.log(1 - decimal);\r\n}\r\n\r\nconst getDecimalFromLogit = (logit: number) => {\r\n  return Math.exp(logit) / (Math.exp(logit) + 1) * 100\r\n}\r\n\r\n\r\nexport const getMapUrl = (language: LanguageType) => {\r\n  return language === LanguageType.english ? 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token='\r\n    : 'https://api.mapbox.com/styles/v1/serotracker/ckb5pp5aj33xn1it8hivdofiv/tiles/512/{z}/{x}/{y}?access_token='\r\n}\r\n\r\nexport const colors = ['#76E57F', '#62CA7C', '#4FB079', '#3B9577', '#277A74', '#146071', '#00456E', \"#EEEEEE\"]\r\n\r\nexport const getColor = (d: number | null, buckets: number[]) => {\r\n  if (d === null) return colors[7];\r\n  \r\n  return d < buckets[1] ? colors[0] :\r\n    d < buckets[2] ? colors[1] :\r\n      d < buckets[3] ? colors[2] :\r\n        d < buckets[4] ? colors[3] :\r\n          d < buckets[5] ? colors[4] :\r\n            d < buckets[6] ? colors[5] :\r\n              colors[6]\r\n}\r\n\r\nCountries.registerLocale(English);\r\nCountries.registerLocale(French);\r\n\r\nexport const getCountryName = (country: string, language: LanguageType, optionString: string) => {\r\n  const code = Countries.getAlpha2Code(country, 'en');\r\n  const translatedCountryName = Countries.getName(code, language);\r\n  const displayText = translatedCountryName ? translatedCountryName : Translate(optionString, [toPascalCase(country)]);\r\n  return displayText;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { Dropdown, DropdownProps, LabelProps } from 'semantic-ui-react'\r\nimport { FilterType } from '../../../types';\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport Translate from \"../../../utils/translate/translateService\";\r\nimport { toPascalCase } from \"../../../utils/translate/caseChanger\";\r\nimport { getCountryName } from \"../../../utils/mapUtils\";\r\nimport ReactGA from 'react-ga';\r\n\r\nexport default function Filters() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const formatOptions = (options: any, filter_type: FilterType) => {\r\n    const formatted_options: Record<string, string>[] = [];\r\n    const optionString = toPascalCase(filter_type.toString());\r\n    const jsonObjectString = `${optionString}Options`;\r\n    switch (filter_type) {\r\n      case 'country':\r\n        options.forEach((o: string) => {\r\n          formatted_options.push({\r\n            key: o,\r\n            text: getCountryName(o, state.language, jsonObjectString),\r\n            value: o\r\n          })\r\n        });\r\n        break;\r\n      default:\r\n        options.forEach((o: string) => {\r\n          const translatedString = Translate(jsonObjectString, [toPascalCase(o)]);\r\n          const alternativeString = Translate(jsonObjectString, [o.replace(/ /g, '')]);\r\n          let text = !alternativeString && !translatedString ? o + \"*\" : (translatedString ? translatedString : alternativeString);\r\n          formatted_options.push({\r\n            key: o,\r\n            text: text,\r\n            value: o\r\n          })\r\n        });\r\n    };\r\n    return formatted_options;\r\n  }\r\n\r\n  const addFilter = (data: any, filter_type: string) => {\r\n    dispatch({\r\n      type: 'UPDATE_FILTER',\r\n      payload: {\r\n        filter_type,\r\n        filter_value: data.value\r\n      }\r\n    });\r\n  }\r\n\r\n  const buildSectionHeader = (header_text: string, tooltip_text?: string | React.ReactNode, tooltip_header?: string) => {\r\n    return (\r\n      <div className=\"pb-2 flex\">\r\n        <div className=\"filter-section-header\">{header_text}</div>\r\n        {tooltip_text && (\r\n          <div className=\"tooltip-vert-adj\">\r\n            <InformationIcon\r\n              offset={10}\r\n              position=\"bottom right\"\r\n              color=\"#455a64\"\r\n              tooltipHeader={tooltip_header ? tooltip_header : header_text}\r\n              popupSize=\"small\"\r\n              size=\"sm\"\r\n              tooltip={tooltip_text} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const buildFilterDropdown = (filter_type: FilterType, placeholder: string) => {\r\n    return (\r\n      <div className=\"pb-3\">\r\n        <Dropdown\r\n          text={placeholder}\r\n          fluid\r\n          multiple\r\n          search\r\n          clearable\r\n          selection\r\n          options={formatOptions(state.filter_options[filter_type], filter_type)}\r\n          onChange={(e: any, data: any) => {\r\n            addFilter(data, filter_type)\r\n            ReactGA.event({\r\n              /** Typically the object that was interacted with (e.g. 'Video') */\r\n              category: 'Filter',\r\n              /** The type of interaction (e.g. 'play') */\r\n              action: 'selection',\r\n              /** Useful for categorizing events (e.g. 'Fall Campaign') */\r\n              label: `${filter_type.toString()} - ${data.value}`\r\n              /** A numeric value associated with the event (e.g. 42) */\r\n            })\r\n          }}\r\n          defaultValue={Array.from(state.filters[filter_type])}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0\">\r\n      <div className=\"py-3 center flex\">\r\n        <div className=\"section-title\">\r\n          {Translate(\"Filter\").toUpperCase()}\r\n        </div>\r\n        <div className=\"tooltip-vert-adj\">\r\n          <InformationIcon\r\n            offset={10}\r\n            position=\"bottom right\"\r\n            color=\"#455a64\"\r\n            tooltipHeader={Translate(\"Filter\")}\r\n            popupSize=\"small\"\r\n            size=\"sm\"\r\n            tooltip={Translate('FilterTooltip')} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-10 col align-items-center p-0\">\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader(Translate('Geography'), Translate('GeographyTooltip'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('country', Translate('Country'))}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {\r\n                buildSectionHeader(Translate('StudyInformation'),\r\n                  <div>\r\n                    <p>\r\n                      {Translate('StudyInformationTooltip', ['FirstParagraph'])}\r\n                    </p>\r\n                    <p>\r\n\r\n                      {Translate('StudyInformationTooltip', ['SecondParagraph'])}\r\n                    </p>\r\n                  </div>)\r\n              }\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('source_type', Translate('SourceType'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('study_status', Translate('StudyStatus'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('risk_of_bias', Translate('OverallRiskOfBias'))}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader(Translate('Demographics'), Translate('DemographicsTooltip'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('population_group', Translate('PopulationGroup'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('sex', Translate('Sex'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('age', Translate('Age'))}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader(Translate('TestInformation'), Translate('TestInformationTooltip'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('test_type', Translate('TestType'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('isotypes_reported', Translate('IsotypesReported'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('specimen_type', Translate('SpecimenType'))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { AirtableRecord, AggregatedRecord, AggregationFactor } from \"./types\"\n\nexport default class httpClient {\n    async httpGet(url: string){\n        let url_full = url;\n        if(process.env.REACT_APP_ROUTE){\n            url_full = process.env.REACT_APP_ROUTE + url_full;\n        }\n        const res = await fetch(url_full);\n        if(res.status !== 200) {\n            const error_msg = res.json();\n            console.error(error_msg);\n            return;\n        }\n        else {\n            const response_json = await res.json();\n            return response_json;\n        }\n    }\n\n    async httpPost(url: string, data: Record<string, any>){\n        let url_full = url;\n        if(process.env.REACT_APP_ROUTE){\n            url_full = process.env.REACT_APP_ROUTE + url_full;\n        }\n        const res = await fetch(url_full, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n        });\n        if(res.status !== 200) {\n            const error_msg = res.json();\n            console.error(error_msg);\n            return;\n        }\n        else {\n            const response_json = await res.json();\n            return response_json;\n        }\n    }\n\n    async getHealthcheck() {\n        const healthcheck: string = await this.httpGet('/healthcheck');\n        return healthcheck;\n    }\n\n    async getAirtableRecords() {\n        const response = await this.httpGet('/airtable_scraper/records');\n        if(!response || !(\"records\" in response) || !(\"updated_at\" in response)) {\n            return [];\n        }\n        const airtable_records = response.records!.map((item: Record<string, any>)=>{ \n            // Convert response to AirtableRecord type\n            const record: AirtableRecord = { \n                source_name: item.SOURCE_NAME ? item.SOURCE_NAME[0] : null,\n                lead_org: item.LEAD_ORG ? item.LEAD_ORG[0] : null,\n                first_author: item.FIRST_AUTHOR ? item.FIRST_AUTHOR[0]: null,\n                source_type: item.SOURCE_TYPE ? item.SOURCE_TYPE[0]: null,\n                study_status: item.STUDY_STATUS ? item.STUDY_STATUS[0]: null,\n                study_type: item.STUDY_TYPE,\n                test_type: item.TEST_TYPE,\n                specimen_type: item.SPECIMEN_TYPE ? item.SPECIMEN_TYPE[0] : null,\n                isotypes_reported: item.ISOTYPES,\n                manufacturer: item.MANUFACTURER,\n                approving_regulator: item.APPROVAL,\n                sensitivity: item.SENSITIVITY,\n                specificity: item.SPECIFICITY,\n                publish_date: item.PUB_DATE,\n                publisher: item.PUBLISHER,\n                country: item.COUNTRY ? item.COUNTRY[0] : null,\n                state: item.STATE,\n                city: item.CITY,\n                population_group: item.POPULATION_GROUP,\n                sex: item.SEX,\n                age: item.AGE,\n                denominator: item.DENOMINATOR,\n                summary: item.SUMMARY,\n                seroprevalence: item.SERUM_POS_PREVALENCE,\n                sample_size: item.SAMPLE_SIZE,\n                sampling_method: item.SAMPLING,\n                sampling_start_date: item.SAMPLING_START,\n                sampling_end_date: item.SAMPLING_END,\n                risk_of_bias: item.OVERALL_RISK_OF_BIAS ? item.OVERALL_RISK_OF_BIAS[0] : null,\n                url: item.URL ? item.URL[0] : null,\n                include_in_n: item.INCLUDE_IN_N ? true : false\n            };\n\n            return record; \n        });\n        \n        // Remove timestamp from updated at string\n        const updated_at_words = response.updated_at!.split(\" \", 4);\n        const updated_at_string = updated_at_words.join(\" \");\n\n        return {\n            airtable_records,\n            updated_at: updated_at_string\n        };\n    }\n\n    async postMetaAnalysis(records: AirtableRecord[], aggregation_variable: AggregationFactor, meta_analysis_technique: string = 'fixed', meta_analysis_transformation: string = 'double_arcsin_precise'){\n        // Note: while the rest of the aggregation variables can stay consistent with frontend nomenclature\n        // the aggregation variable \"country\" must be changed to \"COUNTRY\"\n        const formatted_agg_var = aggregation_variable === AggregationFactor.country ? \"COUNTRY\" : aggregation_variable;\n        const formatted_records = records!.filter(item => item[aggregation_variable] != null).map((item: AirtableRecord)=>{ \n            // Note, all aggregation variable fields must be string arrays\n            const record: Record<string, any> = { \n                SERUM_POS_PREVALENCE: item.seroprevalence,\n                DENOMINATOR: item.denominator,\n                COUNTRY: [item.country]\n            };\n            if(aggregation_variable !== AggregationFactor.country){\n                record[aggregation_variable] = Array.isArray(item[aggregation_variable]) ? item[aggregation_variable] : [item[aggregation_variable]];\n            }\n            return record; \n        });\n\n        const req_body = {\n            records: formatted_records,\n            aggregation_variable: formatted_agg_var,\n            meta_analysis_technique,\n            meta_analysis_transformation\n        };\n\n        const response = await this.httpPost('/meta_analysis/records', req_body);\n        if(response){\n            // Convert response to aggregatedRecord object\n            const formatted_response: AggregatedRecord[] = Object.keys(response).filter((key: string) => response[key] !== null).map((key: string) => {\n                return {\n                    error: response[key].error_percent,\n                    n: response[key].total_N,\n                    name: key,\n                    num_studies: response[key].n_studies,\n                    seroprevalence: response[key].seroprevalence_percent,\n                }\n            });\n            return formatted_response;\n        }\n        return response;\n    }\n\n    // Aggregation of all records, to support TotalStats view\n    // TODO: Consolidate this function with postMetaAnalysis\n    async postMetaAnalysisAll(records: AirtableRecord[], meta_analysis_technique: string = 'fixed', meta_analysis_transformation: string = 'double_arcsin_precise'){\n        const formatted_records = records!.map((item: AirtableRecord)=>{ \n            const record = { \n                SERUM_POS_PREVALENCE: item.seroprevalence,\n                DENOMINATOR: item.denominator,\n                COUNTRY: [item.country]\n            };\n            return record; \n        });\n\n        const req_body = {\n            records: formatted_records,\n            meta_analysis_technique,\n            meta_analysis_transformation\n        };\n\n        const response = await this.httpPost('/meta_analysis/records', req_body);\n        const formatted_response = {\n            error: response.error_percent,\n            n: response.total_N,\n            countries: response.countries,\n            num_studies: response.n_studies,\n            seroprevalence: response.seroprevalence_percent\n        }\n        return formatted_response;\n    }\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport { MIN_DENOMINATOR } from \"../../../metaAnalysis\"\r\nimport './TotalStats.css';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\nimport httpClient from \"../../../httpClient\";\r\n\r\n\r\nexport default function TotalStats() {\r\n  const [state] = useContext(AppContext);\r\n  const [countries, setNumCountries] = useState(0);\r\n  const [seroprevalence, setSeroprevalence] = useState<any>(null);\r\n  const [n, setN] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if(state.filtered_records.length > 0){\r\n      const updateCountryPrevalence = async () => {\r\n        const api = new httpClient();\r\n        const results = await api.postMetaAnalysisAll(state.filtered_records);\r\n        setNumCountries(results.countries);\r\n        setSeroprevalence(results.seroprevalence);\r\n        setN(results.n);\r\n      } \r\n      updateCountryPrevalence();\r\n    }\r\n  }, [state.filtered_records])\r\n\r\n  //TODO: Extract to utils\r\n  const countriesOrCountry = () => {\r\n    return Translate(countries > 1 && countries !== 0 ? \"Countries\" : \"Country\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 stats-container\">\r\n      <div className=\"col-12 py-3 section-title center\">{Translate('SummaryStatistics').toUpperCase()}</div>\r\n      <div className=\"col-12 p-0 flex\">\r\n        <div className=\"main-statistic-title col-12 p-0 center-item flex\">\r\n          {Translate('Seroprevalence')}\r\n          <InformationIcon\r\n            color=\"#468ac1\"\r\n            offset={-12}\r\n            tooltip={\r\n              <div>\r\n                <p>\r\n                  {Translate(\"SeroprevalenceTooltip\", ['FirstParagraph'])}\r\n                </p>\r\n                <p>\r\n                  {Translate(\"SeroprevalenceTooltip\", ['SecondParagraph'])}\r\n                </p>\r\n                <p>\r\n                  {Translate(\"SeroprevalenceTooltip\", ['ThirdParagraph'], { \"MIN_DENOMINATOR\": MIN_DENOMINATOR })}\r\n                </p>\r\n              </div>\r\n            }\r\n            size=\"xs\"\r\n            tooltipHeader={Translate(\"AggregatedPrevalence\")} /></div>\r\n        <div className=\"main-statistic col-12 p-0 center\">{seroprevalence ? `${seroprevalence!.toFixed(2)}%` : Translate(\"NoData\")}</div>\r\n      </div>\r\n      <div className=\"col-12 flex middle py-2\">\r\n        <div className=\"secondary-statistic-title center p-0 col-12\">{Translate(\"TestsAdministered\")}</div>\r\n        <div className=\"secondary-statistic col-12 p-0 center\">{n}</div>\r\n      </div>\r\n      <div className=\"col-12 flex middle py-2\">\r\n        <div className=\"secondary-statistic px-1 center\">{countries}</div>\r\n        <div className=\"secondary-statistic-title px-1 center\">{countriesOrCountry()}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { AirtableRecord, AggregationFactor, AggregatedRecord, FilterType } from \"./types\"\n\nconst Z_SCORE: number = 1.96;\nexport const MIN_DENOMINATOR: number = 100;\n\nfunction transformPrevalence (p: number, N: number, method: string){\n    switch(method as any) {\n        case \"inverse_variance\": {\n            return p; \n        }\n        case \"logit\": {\n            return Math.log(p / (1 - p))\n        }\n        case \"arcsin\": {\n            return Math.asin(Math.sqrt(p))\n        }\n        case \"double_arcsin\": {\n            const n = N * p\n            return (Math.asin(Math.sqrt(n / (N + 1))) + Math.asin(Math.sqrt((n + 1) / (N + 1))) )\n        }\n        case \"double_arcsin_RSM\": {\n            const n = N * p\n            return 0.5 * (Math.asin(Math.sqrt(n / (N + 1))) + Math.asin(Math.sqrt((n + 1) / (N + 1))) )\n        }\n    }\n}\n\nfunction transformVariance(p: number, N: number, method: string){\n    switch(method as any){\n        case \"inverse_variance\": {\n            return p * (1 - p) / N; \n        }\n        case \"logit\": {\n            return 1 / (N * p) + 1 / (N * (1 - p));\n        }\n        case \"arcsin\": {\n            return 1 / (4 * N)\n        }\n        case \"double_arcsin\": {\n            return 1 / (N + 0.5)\n        }\n        case \"double_arcsin_RSM\": {\n            return 1 / (4 * N + 2)\n        }\n    }\n}\n\nfunction backTransform(t: number, n: number, method: string){\n    switch(method as any){\n        case \"inverse_variance\": {\n            return t;\n        }\n        case \"logit\": {\n            return Math.exp(t) / (Math.exp(t) + 1);\n        }\n        case \"arcsin\": {\n            return Math.sin(t) ** 2\n        }\n        case \"double_arcsin\": {\n            return Math.sin(t / 2) ** 2\n        }\n        case \"double_arcsin_RSM\": {\n            return 0.5 * (1 - Math.sign(Math.cos(t)) \n            * Math.sqrt(1 - (Math.sin(2 * t) + (Math.sin(2 * t) - 2 * Math.sin(2 * t)) / n) ** 2))\n        }\n    }\n}\n\nexport function aggregateRecords(records: AirtableRecord[], method: string = \"double_arcsin_RSM\") {\n    let total_positive = 0;\n    let total_tested = 0;\n\n    const filteredRecords = records.filter(record => ((record.seroprevalence !== null) && (record.denominator !== null && record.denominator >= MIN_DENOMINATOR)));\n    const n_studies = filteredRecords.length;\n\n    let pooled_p: number = 0;\n    let error: number[] = [0, 0];\n\n    if (method === \"naive_pooling\"){\n        filteredRecords.forEach((record: AirtableRecord) => {\n            total_positive += (record.seroprevalence as number) * (record.denominator as number);\n            total_tested += (record.denominator as number);\n        });\n\n        pooled_p = total_positive / total_tested;\n\n        const pooled_var = ((pooled_p) * (1 - pooled_p)) / total_tested;\n        error = [Z_SCORE * Math.sqrt(pooled_var), Z_SCORE * Math.sqrt(pooled_var)];\n    } else {\n        let var_sum = 0;\n        let inv_var_sum = 0;\n        let p_over_var_sum = 0;\n        let inv_n_sum = 0;\n        let prevalence = 0;\n        let variance = 0;\n\n        \n        filteredRecords.forEach((record: AirtableRecord) => {\n            if ((record.seroprevalence !== null) && (record.denominator !== null) && (record.seroprevalence !== 0) && (record.denominator !== 0)) {\n                prevalence = transformPrevalence(record.seroprevalence, record.denominator, method)!;\n                variance = transformVariance(record.seroprevalence, record.denominator, method)!;\n                var_sum = var_sum + variance;\n                inv_var_sum = inv_var_sum + (1 / variance);\n                p_over_var_sum = p_over_var_sum + (prevalence / variance);\n                total_tested = total_tested + record.denominator;\n                inv_n_sum = inv_n_sum + 1 / record.denominator;\n            }\n        });\n\n        pooled_p = p_over_var_sum / inv_var_sum;\n        const conf_inter = [pooled_p - Z_SCORE * Math.sqrt(var_sum), pooled_p + Z_SCORE * Math.sqrt(var_sum)]\n\n        const overall_n = 1 / (inv_n_sum / n_studies)\n\n        pooled_p = backTransform(pooled_p, overall_n, method)!; \n        error = [pooled_p - backTransform(conf_inter[0], overall_n, method)!, backTransform(conf_inter[1], overall_n, method)! - pooled_p];\n    }\n\n    if (pooled_p - error[0] < 0) {error[0] = pooled_p}\n    if (pooled_p + error[1] > 1) {error[1] = 1 - pooled_p}\n    \n    const aggregatedRecord: AggregatedRecord = {\n        seroprevalence: pooled_p * 100,\n        error: [error[0] * 100, error[1] * 100],\n        n: total_tested,\n        num_studies: n_studies,\n        name: \"\"\n    }\n    return aggregatedRecord\n}\n\n// Given an aggregation factor (either 'country' or 'populations')\n// get pooled seroprevalence, error bounds, and n (total number of tests) for each country or population\n// if must_include_in_n = true, only records tagged as \"include_in_n\" will be incorporated into seroprevalence estimates\nexport function getAggregateData(records: AirtableRecord[], aggregation_factor: AggregationFactor, must_include_in_n: boolean = false) {\n    const grouped_records: Record<string, AirtableRecord[]> = {}\n    const aggregationString: string = aggregation_factor.toString();\n    records.forEach((record: AirtableRecord) => {\n        const to_include = must_include_in_n ? record.include_in_n : true;\n        if(to_include){\n            const recordStrings = record[aggregationString as FilterType];\n            if ((record.seroprevalence !== null) && (record.denominator !== null) && (recordStrings != null)) {\n                const strings = recordStrings instanceof Array ? recordStrings : [recordStrings];\n                strings.forEach( group => groupRecords(grouped_records, record, group) )\n            }\n        }\n    });\n\n\n    const aggregate_data: AggregatedRecord[] = []\n\n    for (const name in grouped_records) {\n        const result = aggregateRecords(grouped_records[name]);\n        aggregate_data.push({ ...result, name });\n    }\n    return aggregate_data;\n}\n\nfunction groupRecords(grouped_records: Record<string, AirtableRecord[]>, record: AirtableRecord, group: string) {\n    if (group in grouped_records) {\n        grouped_records[group].push(record);\n    }\n    else {\n        grouped_records[group] = [record];\n    }\n}\n","import _ from \"lodash\";\r\nimport React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport './CountryList.css';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\n\r\nexport default function CountryList() {\r\n  const [state] = useContext(AppContext);\r\n  const aggregatedData = _.sortBy(state.country_prevalences, ['seroprevalence']).reverse();\r\n\r\n  return (\r\n    <div className=\"country-list\">\r\n      <div className=\"section-title py-2 center\">\r\n        {Translate('SeroPrevalenceByCountry').toUpperCase()}\r\n      </div>\r\n      <div className=\"list\">\r\n          {aggregatedData.map(o => {\r\n            return (\r\n              <div className=\"flex item-container\" key={Math.random()}>\r\n                <div className=\"p-2 country-name center-item\">\r\n                  {o.name}\r\n                </div>\r\n                <div className=\"p-2 country-stat center-item\">\r\n                  {(o.seroprevalence as Number).toFixed(2)}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport { AirtableRecord } from \"../../types\";\r\nimport \"./StudyDetailsModal.css\";\r\nimport Translate from \"../../utils/translate/translateService\";\r\nimport ReactGA from 'react-ga';\r\n\r\n// TODO: Extract this into a modal service \r\n\r\ninterface StudyDetailsModalProps {\r\n  record: AirtableRecord\r\n}\r\nexport default function StudyDetailsModal(props: StudyDetailsModalProps) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const inlineStyle = {\r\n    modal: {\r\n      marginTop: '0px !important',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      top: 'auto',\r\n      left: 'auto',\r\n      height: 'auto'\r\n    }\r\n  };\r\n\r\n  const getPossibleNullString = (nullString: string | number | null | undefined) => {\r\n    if (nullString === null || nullString === undefined) {\r\n      return \"Not Reported\"\r\n    }\r\n    return nullString\r\n  }\r\n\r\n  const getPossibleNullStringArray = (nullString: string[] | null | undefined) => {\r\n    if (nullString === null || nullString === undefined) {\r\n      return \"Not Reported\"\r\n    }\r\n    return nullString.join(\", \")\r\n  }\r\n\r\n  const getAuthorString = (first_author: string | undefined | null, lead_org: string | null | undefined) => {\r\n    if (lead_org && first_author) {\r\n      return Translate('StudyDetailsAuthorString', ['LeadOrg'], { 'FIRST_AUTHOR': first_author, 'LEAD_ORG': lead_org })\r\n    }\r\n    else if (first_author) {\r\n      return Translate('StudyDetailsAuthorString', ['NoLeadOrg'], { 'FIRST_AUTHOR': first_author })\r\n    }\r\n    return Translate('AuthorAndLeadOrganizationNotReported')\r\n  }\r\n\r\n  const getPublishString = (publish_date: string | string[] | undefined | null, publisher: string | null | undefined) => {\r\n    const date = publish_date instanceof Array ? publish_date[0] : publish_date;\r\n    if (date && publisher) {\r\n      return Translate('StudyDetailsPublishString', ['PublisherAndDate'], { 'PUBLISH_DATE': date, 'PUBLISHER': publisher })\r\n    }\r\n    else if (date) {\r\n      return Translate('StudyDetailsPublishString', ['NoPublisher'], { 'PUBLISH_DATE': date })\r\n    }\r\n    else if (publisher) {\r\n      return Translate('StudyDetailsPublishString', ['NoPublishDate'], { 'PUBLISHER': publisher })\r\n    }\r\n    return null\r\n  }\r\n\r\n  const {\r\n    source_name, first_author, lead_org, publish_date, publisher, url,\r\n    summary, study_status, study_type,\r\n    population_group, age, city, state, country, sex,\r\n    seroprevalence, risk_of_bias, denominator,\r\n    sampling_method, sampling_end_date, sampling_start_date,\r\n    test_type, sensitivity, specificity, isotypes_reported, manufacturer, approving_regulator\r\n  } = props.record\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      size=\"large\"\r\n      closeOnEscape={true}\r\n      closeOnDimmerClick={true}\r\n      onClose={() => { setOpen(false) }}\r\n      onOpen={() => {\r\n        ReactGA.event({\r\n          category: 'Study Details Modal',\r\n          action: 'opening',\r\n          label: props.record.source_name || \"Unknown\"\r\n        })\r\n      }}\r\n      open={open}\r\n      style={inlineStyle.modal}\r\n      trigger={\r\n        <Button onClick={() => setOpen(true)} style={{ padding: '8px' }}>\r\n          {Translate('Details')}\r\n        </Button>}>\r\n      <Modal.Header>{Translate('PrevalenceEstimateDetails')}\r\n        <FontAwesomeIcon onClick={() => setOpen(false)} icon={faTimes} size={\"sm\"} className=\"float-right cursor\" />\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <div className=\"col-12 p-0 flex\">\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Source').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 section-container modal-text-container\">\r\n                <Link to={url || \"\"} className=\"col-12 p-0 name-text\">\r\n                  {source_name}\r\n                </Link>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  {getAuthorString(first_author, lead_org)}\r\n                </div>\r\n                <div className=\"col-12 p-0 tertiary-text\">\r\n                  {getPublishString(publish_date, publisher)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Study').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('Summary')}: </span>\r\n                    {getPossibleNullString(summary)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('Status')}: </span>{getPossibleNullString(study_status)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('StudyType')}: </span>{getPossibleNullString(study_type)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Demographics').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('Population')}: </span>{getPossibleNullStringArray(population_group)}\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('AgeGroup')}: </span>{getPossibleNullStringArray(age)}\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span>\r\n                    <span className=\"secondary-title\">{Translate('Location')}: </span>{city ? `${city.join(\", \")}, ` : \"\"}{state ? `${state.join(\", \")}, ` : \"\"}{country ? country : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('Sex')}: </span>{getPossibleNullString(sex)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 pl-0 pr-2 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Prevalence').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('Estimate')}: </span>{seroprevalence ? (seroprevalence * 100).toFixed(2) : \"Not Reported\"}%\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('StudySize')}: </span>{getPossibleNullString(denominator)}\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('RiskOfBias')}: </span>{getPossibleNullString(risk_of_bias)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 pl-2 pr-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Sampling').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('SamplingMethod')}: </span>{getPossibleNullString(sampling_method)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('StartDate')}: </span>{getPossibleNullString(sampling_start_date)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('EndDate')}: </span>{getPossibleNullString(sampling_end_date)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('TestDetails').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-6 p-0\">\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Manufacturer')}: </span>{getPossibleNullString(manufacturer)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('TestUsed')}: </span>{getPossibleNullStringArray(test_type)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Isotypes')}: </span>{getPossibleNullStringArray(isotypes_reported)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0\">\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Specificity')}: </span>{specificity ? `${(specificity * 100).toFixed(2)}%` : \"Not Reported\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Sensitivity')}: </span>{sensitivity ? `${(sensitivity * 100).toFixed(2)}%` : \"Not Reported\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-126 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('RegulatoryApproval')}: </span>{getPossibleNullString(approving_regulator)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal >\r\n  )\r\n} ","import _ from 'lodash';\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Dropdown, DropdownProps, Pagination, Table } from \"semantic-ui-react\";\r\nimport { AppContext } from \"../../context\";\r\nimport './Charts.css';\r\nimport StudyDetailsModal from './StudyDetailsModal';\r\nimport { mobileDeviceWidth } from '../../constants';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { AirtableRecord } from '../../types';\r\nimport Translate from '../../utils/translate/translateService';\r\n\r\nexport default function ReferencesTable() {\r\n  const [state] = useContext(AppContext);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [boundaryRange] = useState(1);\r\n  const [siblingRange] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(10);\r\n  const [pageLength, setPageLength] = useState(5);\r\n  const [column, setColumn] = useState('denominator');\r\n  const [direction, setDirection] = useState('descending');\r\n  const initialDataState: AirtableRecord[] = [];\r\n  const [data, setData] = useState(initialDataState);\r\n\r\n  const handlePaginationChange = (e: any, event: any) => {\r\n    const { activePage } = event;\r\n    setActivePage(activePage)\r\n  }\r\n\r\n  const handlePageLengthChange = (e: any, event: DropdownProps) => {\r\n    setPageLength(event.value as number);\r\n    setActivePage(1);\r\n  }\r\n\r\n  const pageLengthOptions = [\r\n    { text: 5, value: 5 }, { text: 10, value: 10 }, { text: 25, value: 25 }, { text: 50, value: 50 }, { text: 100, value: 100 }\r\n  ]\r\n\r\n  const handleSort = (clickedColumn: string) => () => {\r\n    if (column !== clickedColumn) {\r\n\r\n      setActivePage(1);\r\n      setColumn(clickedColumn);\r\n      setDirection('ascending');\r\n      return\r\n    }\r\n    else {\r\n      setDirection(direction === 'ascending' ? 'descending' : 'ascending');\r\n    }\r\n  }\r\n  \r\n  const isMobileDevice = useMediaQuery({ maxWidth: mobileDeviceWidth })\r\n\r\n  useEffect(() => {\r\n    let newData = [];\r\n\r\n    if (direction === 'descending') {\r\n      newData = _.orderBy(state.filtered_records, [(o: any) => { return o[column] || '' }], ['desc']);\r\n    }\r\n    else {\r\n      newData =  _.orderBy(state.filtered_records, [column], ['asc']);\r\n    }\r\n\r\n    const splicedData = newData.splice((activePage - 1) * pageLength, pageLength);\r\n    setData(splicedData);\r\n\r\n    if (isMobileDevice) {\r\n      setPageLength(Math.ceil(state.filtered_records.length))\r\n    }\r\n    else {\r\n      setTotalPages(Math.ceil(state.filtered_records.length / pageLength));\r\n    }\r\n  }, [activePage, column, direction, isMobileDevice, pageLength, state.filtered_records])\r\n\r\n  const buildHeaderCell = (sortColumn: string, displayName: string, className: string) => {\r\n    return (\r\n      <Table.HeaderCell\r\n        className={className}\r\n        sorted={column === sortColumn ? direction as any : null}\r\n        onClick={handleSort(sortColumn)}\r\n      >\r\n        {displayName}\r\n      </Table.HeaderCell>)\r\n\r\n  }\r\n\r\n  const getPopulation = (sex: string | null, age: string[] | null, population_group: string[] | null) => {\r\n    if (!population_group) {\r\n      return \"Not Reported\";\r\n    }\r\n    const displaySex = sex && sex !== \"All\" && sex !== \"Unspecified\";\r\n    const displayAge = age && age[0] !== \"All\" && age[0] !== \"Unspecified\";\r\n    return `${displaySex ? `${sex}, ` : \"\"}${displayAge ? `${(age as string[]).join(\", \")}, ` : \"\"}${population_group.join(\", \")}`;\r\n  }\r\n\r\n  const getGeography = (city: string[] | null | undefined, state: string[] | null | undefined, country: string | null) => {\r\n    if (!country) {\r\n      return \"Not Reported\";\r\n    }\r\n    return `${city ? `${city.join(\", \")}, ` : \"\"}${state ? `${state.join(\", \")}, ` : \"\"}${country}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container col-11 mt-3 top references\">\r\n      <div className=\"col-12 px-0 py-3 section-title\">\r\n        {Translate('References').toUpperCase()}\r\n      </div>\r\n      <Table celled sortable fixed striped className=\"table mb-3 mt-0\">\r\n        <Table.Header className=\"flex col-12 p-0\">\r\n          <Table.Row className=\"flex col-12 p-0\">\r\n            {buildHeaderCell('title', Translate('Name'), 'col-sm-12 col-lg-3 p-1')}\r\n            {buildHeaderCell('country', Translate('Geography'), 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('populations', Translate('Populations'), 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('denominator', Translate('N'), 'col-sm-12 col-lg-1 p-1')}\r\n            {buildHeaderCell('seroprevalence', Translate('Prevalence'), 'col-sm-12 col-lg-1 p-1')}\r\n            {buildHeaderCell('risk_of_bias', Translate('RiskOfBias'), 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('', Translate('Details'), 'col-sm-12 col-lg-1 p-1')}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"col-12 p-0\">\r\n          {_.map(data,\r\n            (record) => {\r\n              const {\r\n                source_name, source_type, url,\r\n                country, state, city,\r\n                denominator,\r\n                sex, age, population_group,\r\n                seroprevalence,\r\n                risk_of_bias,\r\n              } = record\r\n              return (\r\n                <Table.Row className=\"flex col-12 p-0\" key={Math.random()}>\r\n                  <Table.Cell className=\" col-sm-12 col-lg-3 p-1\">\r\n                    <a href={url ? url : '#'} target=\"_blank\" rel=\"noopener noreferrer\">{source_name}</a>\r\n                    <i className=\"px-1\">({source_type})</i>\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{getGeography(city, state, country)}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{getPopulation(sex, age, population_group)}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-1\">{denominator ? denominator : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-1\">{seroprevalence ? `${(seroprevalence * 100).toFixed(2)}%` : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{risk_of_bias ? risk_of_bias : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-0 center-item\"><StudyDetailsModal record={record} /></Table.Cell>\r\n                </Table.Row>\r\n              )\r\n            })}\r\n        </Table.Body>\r\n        {\r\n          !isMobileDevice ?\r\n            <Table.Footer className=\"flex space-between\">\r\n              <Pagination\r\n                activePage={activePage}\r\n                boundaryRange={boundaryRange}\r\n                onPageChange={handlePaginationChange}\r\n                size='mini'\r\n                siblingRange={siblingRange}\r\n                totalPages={totalPages}\r\n              />\r\n              <div className=\"p-2 flex\">\r\n                <Dropdown inline\r\n                  options={pageLengthOptions}\r\n                  defaultValue={pageLengthOptions[0].value}\r\n                  onChange={handlePageLengthChange} />\r\n                <div className=\"px-2\">\r\n                  {Translate('StudiesPerPage')}\r\n              </div>\r\n              </div>\r\n            </Table.Footer> :\r\n            null\r\n        }\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Bar, BarChart, CartesianGrid, ErrorBar, LabelList, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Dropdown, DropdownProps } from \"semantic-ui-react\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\nimport { AppContext } from \"../../context\";\r\nimport { AggregationFactor, AggregatedRecord } from \"../../types\";\r\nimport InformationIcon from \"../shared/InformationIcon\";\r\nimport './Charts.css';\r\nimport ReferencesTable from \"./ReferencesTable\";\r\nimport Translate from \"../../utils/translate/translateService\";\r\nimport ReactGA from 'react-ga';\r\nimport httpClient from \"../../httpClient\";\r\n\r\nexport default function Charts() {\r\n  const [yAxisSelection, setYAxis] = useState(AggregationFactor.country);\r\n  const [state] = useContext(AppContext);\r\n  const { filtered_records, filters } = state;\r\n  const initState = [] as AggregatedRecord[];\r\n  const [records, setRecords] = useState(initState);\r\n\r\n  const yAxisOptions = [\r\n    { key: 'Geographies', text: Translate('Geographies'), value: AggregationFactor.country },\r\n    { key: 'Population', text: Translate('Population'), value: AggregationFactor.population_group },\r\n    { key: 'Sex', text: Translate('Sex'), value: AggregationFactor.sex },\r\n    { key: 'Age', text: Translate('Age'), value: AggregationFactor.age },\r\n    { key: 'Study Status', text: Translate('StudyStatus'), value: AggregationFactor.study_status },\r\n    { key: 'Test Type', text: Translate('TestType'), value: AggregationFactor.test_type },\r\n    { key: 'Source Type', text: Translate('SourceType'), value: AggregationFactor.source_type },\r\n    { key: 'Risk Of Bias', text: Translate('RiskOfBias'), value: AggregationFactor.risk_of_bias },\r\n    { key: 'Isotypes Reported', text: Translate('IsotypesReported'), value: AggregationFactor.isotypes_reported },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if(filtered_records.length > 0){\r\n      const updateCharts = async () => {\r\n        const api = new httpClient();\r\n        const reAggregatedRecords = await api.postMetaAnalysis(state.filtered_records, yAxisSelection);\r\n        const chartData = _.sortBy(reAggregatedRecords, 'seroprevalence').reverse();\r\n        setRecords(chartData);\r\n      } \r\n      updateCharts();\r\n    }\r\n  }, [yAxisSelection, state, filtered_records, filters])\r\n\r\n  const handleChange = (event: SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\r\n    setYAxis(data.value as AggregationFactor);\r\n    ReactGA.event({\r\n      category: 'Independent Variable',\r\n      action: 'selection',\r\n      label:  data.text || \"Unknown\"\r\n    })\r\n  }\r\n\r\n  const CustomTooltip = (e: any) => {\r\n    const { active, payload, label } = e\r\n    if (active && payload) {\r\n      const seroprevalence = payload[0].value;\r\n      const recordError = records.find(o => o.name === label)?.error || [0, 0];\r\n      return (\r\n        <div className=\"col flex popup\">\r\n          <div className=\"col-12 p-0 popup-header\">{label}</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"Seroprevalence\")}: {seroprevalence.toFixed(2)}%</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"95%ConfidenceInterval\")}:  {(seroprevalence - recordError[0]).toFixed(2)}%-{(seroprevalence + recordError[1]).toFixed(2)}%</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate('TotalTests')}: {payload[0].payload.n}</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate('TotalEstimates')}: {payload[0].payload.num_studies}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  const renderCustomizedLabel = (props: any) => {\r\n    const { x, y, width, height, value, index } = props;\r\n    let recordError = records[index].error;\r\n    const ratio = width / value;\r\n    const error = Array.isArray(recordError) ? recordError[1] : recordError;\r\n    const errorBarWidth = ratio * error;\r\n    return (\r\n      <g>\r\n        <text x={x + width + 10 + (errorBarWidth as number)} y={y + height / 2 + 5} fill=\"#000\" textAnchor=\"right\" dominantBaseline=\"right\">\r\n          {value.toFixed(2)}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const getYAxisWidth = (chartData: Record<string, string | number | number[]>[]) => {\r\n    let longestWord = 0;\r\n    chartData.filter(o => o.name)\r\n      .forEach(o => {\r\n        const country = o.name as string;\r\n        longestWord = country.length > longestWord ? country.length : longestWord;\r\n      })\r\n    return longestWord;\r\n  }\r\n\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxWidth: mobileDeviceOrTabletWidth })\r\n\r\n  return (\r\n    <div className=\"charts-page\">\r\n      <div className={isMobileDeviceOrTablet ? \"mobile-charts container col-11 center-item flex\" : \"charts container col-11 center-item flex\"}>\r\n        <div className=\"col-12 p-0 flex\">\r\n          <div className=\"col-sm-1 col-lg-3\">\r\n          </div>\r\n          <div className=\"charts-title flex p-0 mt-2 p-lg-0 col-sm-8 col-lg-6\">\r\n            <div className=\"col-auto flex center-item\">\r\n              {Translate('SeroprevalenceBy')}\r\n            </div>\r\n            <Dropdown\r\n              placeholder={Translate('Geographies')}\r\n              fluid selection\r\n              className=\"col large-dropdown\"\r\n              onChange={handleChange}\r\n              options={yAxisOptions}\r\n            >\r\n            </Dropdown>\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 flex top right\">\r\n            95% CI\r\n            <InformationIcon\r\n              offset=\"10px\"\r\n              position=\"bottom right\"\r\n              color=\"#455a64\"\r\n              size=\"sm\"\r\n              tooltip={Translate(\"95%ConfidenceIntervalTooltip\")}\r\n              tooltipHeader={Translate(\"95%ConfidenceInterval\")} />\r\n          </div>\r\n        </div>\r\n        <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n          <BarChart data={records} layout='vertical' barGap={10}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis type=\"number\" name={`${Translate(\"Seroprevalence\")} (%)`} padding={{ left: 0, right: 30 }} />\r\n            <YAxis dataKey=\"name\" type=\"category\" interval={0} width={getYAxisWidth(records) * 7} />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend />\r\n            <Bar dataKey=\"seroprevalence\" name={`${Translate('Seroprevalence')} (%)`} fill=\"#55A6BA\" maxBarSize={60} barSize={20}>\r\n              <LabelList dataKey=\"seroprevalence\" position=\"right\" content={renderCustomizedLabel} />\r\n              <ErrorBar dataKey=\"error\" width={4} strokeWidth={2} />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <ReferencesTable />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\nimport { getColor } from \"../../utils/mapUtils\";\r\nimport Translate from \"../../utils/translate/translateService\";\r\nimport \"./Legend.css\";\r\n\r\ninterface LegendProps {\r\n  buckets: number[]\r\n}\r\n\r\nexport default function Legend(props: LegendProps) {\r\n  const { buckets } = props;\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxWidth: mobileDeviceOrTabletWidth })\r\n\r\n  const labels = buckets.map((value, index) => {\r\n    if (index !== buckets.length) {\r\n      const from = value;\r\n      const to = buckets[index + 1]\r\n      // TODO: Check into passing in an array of colours instead of the getColor function\r\n      return (\r\n        <div className=\"bin flex\" key={Math.random()}>\r\n          <div className={isMobileDeviceOrTablet ? \"col-12 mobile-text p-0\" : \"col-12 p-0\"}>\r\n            {isMobileDeviceOrTablet ? `${from}%${to ? '' : \"+\"}` : `${from}%${to ? `- ${to}%` : \"+\"}`}</div>\r\n          <i className=\"col-12 p-0\" style={{ background: getColor(from, buckets) }}></i>\r\n        </div>\r\n      )\r\n    }\r\n    return null;\r\n  })\r\n  \r\n  return (\r\n    <div className={isMobileDeviceOrTablet ? \"info flex legend-mobile center-item\" : \"info flex legend center-item\"}>\r\n      {labels}\r\n      <h4 className=\"legend-title p-0 middle\">{Translate('Seroprevalence')}\r\n        <span className=\"popup\">\r\n          <div className=\"popup-header\">{Translate(\"SeroprevalenceScale\")}</div>\r\n          <div className=\"popup-content\">{Translate(\"SeroprevalenceScaleTooltip\")}</div>\r\n        </span>\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n","import { latLngBounds, Layer, LeafletMouseEvent } from \"leaflet\";\nimport React, { createRef, useContext, useEffect, useState } from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport { GeoJSON, Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport Countries from \"../../assets/countries-geo.json\";\nimport { AppContext } from \"../../context\";\nimport { AggregatedRecord } from \"../../types\";\nimport { getBuckets, getColor, getCountryName, getMapUrl } from \"../../utils/mapUtils\";\nimport Translate from \"../../utils/translate/translateService\";\nimport Legend from \"./Legend\";\nimport './Map.css';\n\nexport default function Map() {\n  const mapRef = createRef<LeafletMap>();\n  const geoJsonRef = createRef<GeoJSON>();\n  const [state] = useContext(AppContext);\n  const [mapRecords, setMapRecords] = useState(Countries as any);\n  const [forceUpdate, setForceUpdate] = useState(Math.random());\n  const buckets = getBuckets(mapRecords.features);\n\n  useEffect(() => {\n    if(state.country_prevalences.length > 0){\n      const prevalenceCountryDict: Record<string, AggregatedRecord> = state.country_prevalences.reduce((a: any, x: AggregatedRecord) => ({ ...a, [x.name]: x }), {});\n\n      const importGeo = Countries as any;\n      const features = importGeo.features as GeoJSON.Feature[]\n\n      // We will iterate through all the features in the geoJson\n      // if they are in the country dict we will attach their aggregated data to the feature for displaying\n      importGeo.features = features.map(feature => {\n        const country = prevalenceCountryDict![feature?.properties?.name];\n        if (country && country.seroprevalence) {\n          const { seroprevalence, error, n, num_studies } = country;\n          return { ...feature, properties: { ...feature.properties, seroprevalence, error, n, num_studies } }\n        }\n        return { ...feature, properties: { ...feature.properties, seroprevalence: null, error: null, n: null, num_studies: null } }\n      })\n      setMapRecords(importGeo)\n\n      // we need to update the key on the GEOJSON to let react know it's time to rerender\n      setForceUpdate(Math.random())\n    }\n    else{\n      // Initialize map so that it starts out colourless\n      const initImportGeo = Countries as any;\n      const features = initImportGeo.features as GeoJSON.Feature[]\n      initImportGeo.features = features.map(feature => {\n        return { ...feature, properties: { ...feature.properties, seroprevalence: null, error: null, n: null, num_studies: null } }\n      })\n      setMapRecords(initImportGeo);\n    }\n  }, [state.country_prevalences, state.language, state.filters])\n\n\n  const style = (feature: GeoJSON.Feature<GeoJSON.Geometry, any> | undefined) => {\n    return {\n      fillColor: getColor(feature?.properties?.seroprevalence, buckets),\n      weight: 1,\n      opacity: 1,\n      color: 'white',\n      dashArray: '0',\n      fillOpacity: 0.7,\n      zIndex: 650\n    }\n  }\n\n  const highlightFeature = (e: LeafletMouseEvent) => {\n    const layer = e.target;\n    layer.setStyle({\n      weight: 5,\n      color: '#666',\n      dashArray: '',\n      fillOpacity: 0.7,\n      zIndex: 200\n    });\n    layer.bringToFront();\n\n  }\n\n  const zoomToFeature = (e: LeafletMouseEvent) => {\n    const map = mapRef?.current?.leafletElement\n    map?.fitBounds(e.target.getBounds());\n  };\n\n  const resetHighlight = (e: LeafletMouseEvent) => {\n    const layer = e.target;\n\n    layer.setStyle({\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '',\n      fillOpacity: 0.7\n    });\n  };\n  const createPopup = (properties: any) => {\n    if (properties.seroprevalence) {\n      let error = properties?.error;\n      return (\n        <div className=\"col-12 p-0 flex\">\n          <div className=\"col-12 p-0 popup-header\">{getCountryName(properties.name, state.language, \"CountryOptions\")}</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"Seroprevalence\")}: {properties?.seroprevalence.toFixed(2)}%</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"95%ConfidenceInterval\")}: {(properties?.seroprevalence - error[0]).toFixed(2)}%-{(properties?.seroprevalence + error[1]).toFixed(2)}%</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"TotalTests\")}: {properties?.n}</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate('TotalEstimates')}: {properties?.num_studies}</div>\n        </div>)\n    };\n    return (\n      <div className=\"col-12 p-0 flex\">\n        <div className=\"col-12 p-0 popup-header\">{getCountryName(properties.name, state.language, \"CountryOptions\")}</div>\n        <div className=\"col-12 p-0 flex popup-content\">{Translate('NoData')}</div>\n      </div>)\n  }\n\n\n  // This method sets all the functionality for each GeoJSON item\n  const onEachFeature = (feature: GeoJSON.Feature, layer: Layer) => {\n\n    layer.bindPopup(ReactDOMServer.renderToString(createPopup(feature.properties)), { closeButton: false, autoPan: false });\n\n    layer.on({\n      mouseover: (e: LeafletMouseEvent) => {\n        layer.openPopup();\n        highlightFeature(e)\n      },\n      mouseout: (e: LeafletMouseEvent) => {\n        layer.closePopup();\n        resetHighlight(e)\n      },\n      mousemove: (e: LeafletMouseEvent) => {\n        layer.getPopup()?.setLatLng(e.latlng);\n      },\n      click: (e: LeafletMouseEvent) => {\n        zoomToFeature(e);\n      }\n    })\n  }\n\n  const bounds = latLngBounds([-90, -200], [90, 180]);\n  const maxBounds = latLngBounds([-90, -200], [90, 200]);\n\n  const mapboxAccessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n  return (\n    <LeafletMap\n      ref={mapRef}\n      center={[0, 0]}\n      zoom={2}\n      className=\"map w-100\"\n      bounceAtZoomLimits={true}\n      bounds={bounds}\n      minZoom={2}\n      maxBounds={maxBounds}\n      enableHighAccuracy={true}\n      maxBoundsViscosity={1}\n    >\n      <TileLayer\n        url={getMapUrl(state.language) + mapboxAccessToken}\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        tileSize={512}\n        id={'mapbox/light-v9'}\n        zoomOffset={-1}>\n      </TileLayer>\n      <GeoJSON\n        onEachFeature={onEachFeature}\n        ref={geoJsonRef}\n        key={forceUpdate}\n        data={mapRecords as GeoJSON.GeoJsonObject}\n        style={(data) => style(data)}>\n      </GeoJSON>\n      <Legend buckets={buckets} />\n    </LeafletMap>\n  );\n}\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport Charts from \"../../charts/Charts\";\r\nimport './Component.css';\r\nimport Map from '../../map/Map';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\nimport ReactGA from 'react-ga';\r\n\r\nexport default function CentralPiece() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const clickButton = (text: string) => {\r\n\r\n    ReactGA.event({\r\n      category: 'Center Button',\r\n      action: 'click',\r\n      label: text || \"Unknown\"\r\n    })\r\n  }\r\n\r\n  const getClass = (shouldHighlight: boolean) => {\r\n    if (shouldHighlight === state.data_page_state.mapOpen) {\r\n      return 'center-highlighted'\r\n    }\r\n    return 'center-regular'\r\n  }\r\n\r\n  const displayCenter = () => {\r\n    return state.data_page_state.mapOpen ? <Map /> : <Charts />\r\n  }\r\n  return (\r\n    <div className=\"flex fill\">\r\n      <div className=\"center-button flex\">\r\n        <div className={`center-item left-button ${getClass(true)}`} onClick={() => {\r\n          clickButton('Explore');\r\n          dispatch({\r\n            type: 'SELECT_DATA_TAB',\r\n            payload: true\r\n          })\r\n        }}>\r\n          {Translate('Explore')}\r\n        </div>\r\n        <div className={`right-button ${getClass(false)}`} onClick={() => {\r\n          clickButton('Analyze');\r\n          dispatch({\r\n            type: 'SELECT_DATA_TAB',\r\n            payload: false\r\n          })\r\n        }}>\r\n          {Translate('Analyze')}\r\n        </div>\r\n      </div>\r\n      {displayCenter()}\r\n    </div >\r\n  );\r\n}\r\n","import React, { Fragment } from \"react\"\r\n\r\ninterface HandleProps {\r\n  domain: number[];\r\n  handle: {\r\n    id: string;\r\n    value: number;\r\n    percent: number;\r\n  },\r\n  disabled: boolean;\r\n  getHandleProps: Function\r\n}\r\n\r\n\r\nexport function Handle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}: HandleProps) {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"handle\"\r\n        style={{\r\n          left: `${percent}%`,\r\n        }}\r\n        {...getHandleProps(id)}\r\n      />\r\n      <div\r\n        role=\"slider\"\r\n        aria-valuemin={min}\r\n        aria-valuemax={max}\r\n        className=\"handle-slider\"\r\n        aria-valuenow={value}\r\n        style={{\r\n          left: `${percent}%`,\r\n        }}\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport function KeyboardHandle({\r\n  domain: [min, max],\r\n  handle: { id, value, percent },\r\n  disabled,\r\n  getHandleProps,\r\n}: HandleProps) {\r\n  return (\r\n    <button\r\n      role=\"slider\"\r\n      aria-valuemin={min}\r\n      aria-valuemax={max}\r\n      aria-valuenow={value}\r\n      style={{\r\n        left: `${percent}%`,\r\n        position: 'absolute',\r\n        transform: 'translate(-50%, -50%)',\r\n        zIndex: 2,\r\n        width: 24,\r\n        height: 24,\r\n        borderRadius: '50%',\r\n        boxShadow: '1px 1px 1px 1px rgba(0, 0, 0, 0.3)',\r\n        backgroundColor: disabled ? '#666' : '#ffc400',\r\n      }}\r\n      {...getHandleProps(id)}\r\n    />\r\n  )\r\n}","import { Fragment } from \"react\"\r\nimport React from 'react'\r\n\r\ninterface SliderRailProps {\r\n  getRailProps: Function\r\n}\r\n\r\nexport function SliderRail({ getRailProps }: SliderRailProps) {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"outer-rail\" {...getRailProps()} />\r\n      <div className=\"inner-slider-rail\" />\r\n    </Fragment>\r\n  )\r\n}","import React from \"react\"\r\nimport { SliderItem } from \"react-compound-slider\"\r\n\r\ninterface TickProps {\r\n  tick: SliderItem,\r\n  count: number,\r\n  label: string\r\n}\r\n\r\nexport function Tick({ tick, count, label }: TickProps) {\r\n  return (\r\n    <div>\r\n      <div className=\"tick-container\" style={{ left: `${tick.percent}%` }} />\r\n      <div className=\"tick\"\r\n        style={{\r\n          marginLeft: `${-(100 / count) / 2}%`,\r\n          width: `${100 / count}%`,\r\n          left: `${tick.percent}%`,\r\n        }}\r\n      >\r\n        {label}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\"\r\nimport { SliderItem } from \"react-compound-slider\"\r\n\r\ninterface TrackProps {\r\n  source: SliderItem,\r\n  target: SliderItem,\r\n  disabled: boolean,\r\n  getTrackProps: Function\r\n}\r\n\r\nexport function Track({ source, target, getTrackProps, disabled }: TrackProps) {\r\n\r\n  const getPosition = () => {\r\n    const left = `${source.percent}%`;\r\n    const width = `${target.percent - source.percent}%`\r\n\r\n    return {\r\n      left, width\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"track\"\r\n      style={getPosition()}\r\n      {...getTrackProps()}\r\n    />\r\n  )\r\n}\r\n\r\nTrack.defaultProps = {\r\n  disabled: false,\r\n}","import _ from 'lodash'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Handles, Rail, Slider, SliderItem, Ticks, Tracks } from 'react-compound-slider'\r\nimport { AppContext } from '../../../../context'\r\nimport Translate from '../../../../utils/translate/translateService'\r\nimport { Handle } from './Handle'\r\nimport { SliderRail } from './SliderRail'\r\nimport './Styles.scss'\r\nimport { Tick } from './Tick'\r\nimport { Track } from './Track'\r\nimport { LanguageType } from '../../../../types'\r\n\r\ninterface TickItem {\r\n  tick: SliderItem,\r\n  label: string,\r\n  count: number\r\n}\r\n\r\nexport default function DateRangeSlider() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const endMoment = new Date().getTime();\r\n\r\n  const [displayStartDate, setStartDate] = useState(endMoment - 2);\r\n  const [displayEndDate, setEndDate] = useState(endMoment);\r\n  // The end moment should technically be after the start moment\r\n  const [startBound, setStartBound] = useState(endMoment - 1);\r\n  const [endBound,] = useState(endMoment);\r\n\r\n  useEffect(() => {\r\n\r\n    const orderedDates = state.airtable_records\r\n      .filter(o => o.publish_date !== null && o.publish_date !== undefined)\r\n      .map(o => o.publish_date instanceof Array ? Date.parse(o.publish_date[0] as string) : Date.parse(o.publish_date as string))\r\n      .sort((a, b) => a - b);\r\n\r\n    const startDate = orderedDates[0];\r\n    setStartBound(startDate);\r\n    setStartDate(startDate);\r\n\r\n  }, [state.airtable_records])\r\n\r\n  const getTimeRange = (start: Date, end: number) => {\r\n    const startTime = start.getTime();\r\n    const timeElapsed = end - startTime;\r\n    const yearsElapsed = timeElapsed / (1000 * 3600 * 24 * 365)\r\n    const monthsElapsed = yearsElapsed * 12;\r\n    const startMonth = start.getMonth();\r\n    const months = _.range(startMonth, startMonth + monthsElapsed);\r\n    return months.map(month => {\r\n      const year = start.getFullYear() + Math.floor(month / 12)\r\n      const date = new Date(year, month);\r\n      const percentage = (date.getTime() - startTime) / timeElapsed * 100;\r\n      return { percentage, date }\r\n    }).filter(o => o.percentage > 0)\r\n  }\r\n\r\n  const createTicks = (startDate: number, endDate: number) => {\r\n    const start = new Date(startDate);\r\n    const monthRange = getTimeRange(start, endDate);\r\n    const totalCount = monthRange.length + 1;\r\n    const formatOptions = {\r\n      month: 'short'\r\n    }\r\n    const todayTick: TickItem = {\r\n      tick: {\r\n        id: endDate.toString(),\r\n        value: endDate,\r\n        percent: 100\r\n      },\r\n      count: totalCount,\r\n      label: Translate(\"Today\")\r\n    }\r\n\r\n    const localeDate = state.language === LanguageType.english ? \"en-US\" : \"fr-FR\";\r\n\r\n    const monthTicks: TickItem[] = monthRange.map(o => ({\r\n      tick: {\r\n        id: o.date.toString(),\r\n        value: o.date.getTime(),\r\n        percent: o.percentage\r\n      },\r\n      label: o.date.toLocaleDateString(localeDate, formatOptions),\r\n      count: totalCount\r\n    }))\r\n\r\n    return [...monthTicks, todayTick]\r\n  }\r\n\r\n\r\n  const onChange = async (values: readonly number[]) => {\r\n\r\n    if (values[0] === values[1]) {\r\n      return null;\r\n    }\r\n    setStartDate(values[0]);\r\n    setEndDate(values[1]);\r\n    dispatch({\r\n      type: 'UPDATE_FILTER',\r\n      payload: {\r\n        filter_type: 'publish_date',\r\n        filter_value: values\r\n      }\r\n    })\r\n  }\r\n\r\n  if (startBound === undefined || endBound === undefined) {\r\n    return null;\r\n  }\r\n\r\n  const customTicks = createTicks(startBound, endBound);\r\n  return (\r\n    <div className=\"slider-container\">\r\n      <div className=\"section-title space-between flex\">\r\n        {Translate('DateRange')}\r\n        <div className=\"dates\">\r\n          {new Date(displayStartDate).toLocaleDateString(\"en-US\")} - {new Date(displayEndDate).toLocaleDateString(\"en-US\")}\r\n        </div>\r\n\r\n      </div>\r\n      <Slider\r\n        mode={2}\r\n        step={1000 * 3600 * 24}\r\n        domain={[startBound, endBound]}\r\n        className=\"slider\"\r\n        onChange={onChange}\r\n        values={[displayStartDate, displayEndDate]}\r\n      >\r\n        <Rail>\r\n          {({ getRailProps }) => <SliderRail getRailProps={getRailProps} />}\r\n        </Rail>\r\n        <Handles>\r\n          {({ handles, getHandleProps }) => (\r\n            <div className=\"slider-handles\">\r\n              {handles.map(handle => (\r\n                <Handle\r\n                  key={handle.id}\r\n                  handle={handle}\r\n                  domain={[displayStartDate, displayEndDate]}\r\n                  disabled={false}\r\n                  getHandleProps={getHandleProps}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Handles>\r\n        <Tracks left={false} right={false}>\r\n          {({ tracks, getTrackProps }) => (\r\n            <div className=\"slider-tracks\">\r\n              {tracks.map(({ id, source, target }) => (\r\n                <Track\r\n                  key={id}\r\n                  source={source}\r\n                  target={target}\r\n                  getTrackProps={getTrackProps}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Tracks>\r\n        <Ticks>\r\n          {({ ticks }) => (\r\n            <div className=\"slider-ticks\">\r\n              {customTicks.map(tickItem => (\r\n                <Tick key={tickItem.tick.id}\r\n                  tick={tickItem.tick}\r\n                  count={tickItem.count}\r\n                  label={tickItem.label} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </Ticks>\r\n      </Slider>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport './RightSidebar.css';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\n\r\nexport default function LastUpdated() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"col-12 pb-2\">\r\n      <div className='col-12 p-0 center-item flex'>\r\n        <div className=\"section-title\">\r\n        {Translate(\"LastUpdated\").toUpperCase()}\r\n        </div>\r\n        <div className=\"tooltip-vert-adj\">\r\n          <InformationIcon\r\n              offset={10}\r\n              position=\"top right\"\r\n              color=\"#455a64\"\r\n              tooltipHeader={Translate(\"LastUpdated\")}\r\n              popupSize=\"small\"\r\n              size=\"sm\"\r\n              tooltip={Translate(\"LastUpdatedTooltip\")}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"py-2 center\">\r\n        {state.updated_at}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\n// import { AppContext } from \"../../../context\";\r\nimport { Sidebar, Segment, Menu } from \"semantic-ui-react\";\r\nimport Filters from \"../sidebar/right-sidebar/Filters\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faFilter, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TotalStats from \"../sidebar/left-sidebar/TotalStats\";\r\nimport CountryList from \"../sidebar/left-sidebar/CountryList\";\r\nimport CentralPiece from \"../pages/Dashboard/CenterComponent\";\r\nimport DateRangeSlider from \"../sidebar/right-sidebar/date-slider/Slider\";\r\nimport LastUpdated from \"../sidebar/right-sidebar/LastUpdated\";\r\n\r\n\r\nexport default function MobileComponents() {\r\n  const [showMobileFilters, setShowFilters] = useState(false);\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  const handleFilterToggle = (showMobile: boolean, showSummary: boolean) => {\r\n    setShowFilters(showMobile);\r\n    setShowSummary(showSummary);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fill flex\"> \r\n    <Sidebar.Pushable as={Segment} className=\"fill flex\">\r\n      {/* Filters */}\r\n      <Sidebar\r\n        as={Menu}\r\n        animation='overlay'\r\n        icon='labeled'\r\n        className=\"col-10 p-0\"\r\n        vertical\r\n        direction=\"left\"\r\n        visible={showMobileFilters}\r\n        width='wide'\r\n      >\r\n\r\n        <Filters />\r\n        <DateRangeSlider/>\r\n        <LastUpdated/>\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={() => handleFilterToggle(false, false)}\r\n          className={'icon'}\r\n          color={'#455a64'}\r\n          style={{ fontWeight: 300, position: 'absolute', zIndex: 3000, top: 10, right: 20 }}\r\n          size={\"lg\"} />\r\n      </Sidebar>\r\n      {/* Left Sidebar */}\r\n      <Sidebar\r\n        as={Menu}\r\n        animation='overlay'\r\n        icon='labeled'\r\n        className=\"col-10 p-0\"\r\n        vertical\r\n        direction=\"left\"\r\n        visible={showSummary}\r\n        width='wide'\r\n      >\r\n        <TotalStats />\r\n        <CountryList />\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={() => handleFilterToggle(false, false)}\r\n          className={'icon'}\r\n          color={'#455a64'}\r\n          style={{ fontWeight: 300, position: 'absolute', zIndex: 3000, top: 10, right: 20 }}\r\n          size={\"lg\"} />\r\n      </Sidebar>\r\n      <Sidebar.Pusher className=\"fill flex\">\r\n        <CentralPiece />\r\n        {/* Icons */}\r\n        <div className=\"icon-container\"\r\n          style={{ top: 10, right: 15 }}>\r\n          <FontAwesomeIcon\r\n            icon={faFilter}\r\n            onClick={() => handleFilterToggle(!showMobileFilters, false)}\r\n            className={'icon'}\r\n            color={'#455a64'}\r\n            size={\"2x\"} />\r\n        </div>\r\n        <div className=\"icon-container\"\r\n          style={{ top: 10, right: 58 }}>\r\n          <FontAwesomeIcon\r\n            icon={faBars}\r\n            onClick={() => handleFilterToggle(false, !showSummary)}\r\n            className={'icon'}\r\n            color={'#455a64'}\r\n            size={\"2x\"} />\r\n        </div>\r\n      </Sidebar.Pusher>\r\n    </Sidebar.Pushable>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport CountryList from \"./CountryList\";\r\nimport TotalStats from \"./TotalStats\";\r\nimport \"../sidebar.css\"\r\n\r\nexport default function LeftSidebar() {\r\n  return (\r\n    <div className=\"sidebar-container flex\">\r\n      <TotalStats/>\r\n      <CountryList/>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport LastUpdated from \"./LastUpdated\";\r\nimport Slider from './date-slider/Slider';\r\nimport \"../sidebar.css\"\r\nimport \"./RightSidebar.css\"\r\n\r\nexport default function RightSidebar() {\r\n  return (\r\n    <div className=\"justify-content-between sidebar-container\">\r\n      <div className=\"filters-container mb-3\">\r\n        <Filters/>\r\n        <Slider/>\r\n      </div>\r\n      <div>\r\n        <LastUpdated/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../../constants\";\r\nimport MobileComponents from '../../mobile/MobileComponents';\r\nimport LeftSidebar from \"../../sidebar/left-sidebar/LeftSidebar\";\r\nimport RightSidebar from \"../../sidebar/right-sidebar/RightSidebar\";\r\nimport CentralPiece from \"./CenterComponent\";\r\nimport { AppContext } from \"../../../context\";\r\nimport httpClient from \"../../../httpClient\";\r\nimport { AggregationFactor } from \"../../../types\";\r\n\r\nexport default function Dashboard() {\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth });\r\n  const [state, dispatch] = useContext(AppContext);\r\n  \r\n  useEffect(() => {\r\n    if(state.filtered_records.length > 0){\r\n      const updateCountryPrevalence = async () => {\r\n        const api = new httpClient();\r\n        const countryPrevalences = await api.postMetaAnalysis(state.filtered_records, AggregationFactor.country);\r\n        dispatch({\r\n          type: 'UPDATE_COUNTRY_PREVALENCES',\r\n          payload: countryPrevalences\r\n        });\r\n      } \r\n      updateCountryPrevalence();\r\n    }\r\n  }, [state.filtered_records, dispatch])\r\n\r\n  return (\r\n    <div className=\"fill flex dashboard\">\r\n      {!isMobileDeviceOrTablet ?\r\n        (<div className=\"fill flex\">\r\n          <div className=\"col-2 p-0 flex\">\r\n            <LeftSidebar />\r\n          </div>\r\n          <div className=\"col-8 p-0 flex\">\r\n            <CentralPiece />\r\n          </div>\r\n          <div className=\"col-2 p-0 flex\">\r\n            <RightSidebar />\r\n          </div>\r\n        </div>) :\r\n        (\r\n          <div className=\"fill flex\">\r\n            <MobileComponents />\r\n          </div>\r\n        )}\r\n    </div >\r\n  )\r\n}","import React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport './static.css';\nimport { useMediaQuery } from \"react-responsive\";\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\nimport Translate from \"../../utils/translate/translateService\";\nimport ReactGA from 'react-ga';\n\nexport default function Data() {\n    const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\n    const renderPane = (src: string) => {\n        return <Tab.Pane className=\"col-12 p-0\">\n            <iframe\n                title=\"airtable-embed\"\n                className=\"airtable-embed col-12 p-0\"\n                src={src}\n                width=\"85%\"\n                height=\"650\"\n            /></Tab.Pane>\n    }\n\n    const clickLink = (link: string) => {\n        ReactGA.event({\n            category: 'Data Link Click',\n            action: 'click',\n            label: link\n        })\n    }\n\n    const panes = [{\n        menuItem: isMobileDeviceOrTablet ? Translate('Serosurveys') : Translate('SerosurveysReportingPrevalence'),\n        render: () => renderPane('https://airtable.com/embed/shraXWPJ9Yu7ybowM?backgroundColor=blue&viewControls=on')\n    },\n    {\n        menuItem: Translate('PlannedSerosurveys'),\n        render: () => renderPane('https://airtable.com/embed/shr85cDHzwETbjgdu?backgroundColor=blue&viewControls=on')\n    }];\n\n    return (\n        <div className=\"col-12 page\">\n            <div className={isMobileDeviceOrTablet ? \"pb-2\" : \"static-content pb-2\"}>\n                <h1>\n                    {Translate('Methods')}\n                </h1>\n                <p>\n                    {Translate('MethodsText', ['FirstParagraph'])}\n                </p>\n                <p>\n                    {Translate('MethodsText', ['SecondParagraphPartOne'])} \n                    <a target=\"_blank\" onClick={() => clickLink('Methods')} rel=\"noopener noreferrer\" href=\"https://docs.google.com/document/d/1NYpszkr-u__aZspFDFa_fa4VBzjAAAAxNxM1rZ1txWU/edit?usp=sharing\">{Translate('Here', null, null, [true, false]).toLocaleLowerCase()}.</a>\n                    {Translate('MethodsText', ['SecondParagraphPartTwo'], null, [true, false])} \n                    <a rel=\"noopener noreferrer\" onClick={() => clickLink('Study Submission')} target=\"_blank\" href=\"https://forms.gle/XWHQ7QPjQnzQMXSz8\">{Translate('ThisForm', null, null, [true, false]).toLowerCase()}</a>.\n                </p>\n                <h1>\n                    {Translate('Paper')}\n                </h1>\n                <p>\n                    {Translate('PaperText', null, null, [false, true])}<a target=\"_blank\" onClick={() => clickLink('MedRXIV')} rel=\"noopener noreferrer\" href=\"https://www.medrxiv.org/content/10.1101/2020.05.10.20097451v1\">medRxiv</a>.\n                </p>\n                <h1>\n                    {Translate('OurData')}\n                </h1>\n                <p>\n                    {Translate('OurDataText', ['Text'])}\n                </p>\n                <ul>\n                    <li>\n                        <p>\n                            <b>{Translate('SerosurveysReportingPrevalence')}</b>{Translate('OurDataText', ['PointOne'], null, [true, false])}\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <b>{Translate('PlannedSerosurveys')}</b>{Translate('OurDataText', ['PointTwo'], null, [true, false])}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            <Tab className=\"col-10 p-0 airtable-embed vertical-spacer\" panes={panes} />\n        </div>\n    )\n}\n","import { faFileAlt, faGlobeAmericas, faUsers } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { useEffect, useState } from 'react'\nimport { useMediaQuery } from 'react-responsive'\nimport { Link, useLocation } from 'react-router-dom'\nimport MultiColorIcon from '../../assets/images/colored-icon.svg'\nimport { mobileDeviceOrTabletWidth } from '../../constants'\nimport Translate from '../../utils/translate/translateService'\n\n\nexport const NavBar = () => {\n  const [tab, setTab] = useState(\"\");\n\n  const getTabClass = (tabName: string) => {\n    return tabName === tab ? 'bold col-auto h-100 flex center-item' : 'regular col-auto h-100 flex center-item';\n  }\n\n  const usePageViews = () => {\n    let location = useLocation();\n    useEffect(() => {\n      setTab(location.pathname)\n    }, [location]);\n  }\n\n  usePageViews()\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\n  return (\n    <header className=\"App-header col-12 px-sm-2\">\n      <div className=\"App-title col-auto py-3 px-0 flex left\">\n        <Link to=\"/\" className=\"flex\">\n          <img src={MultiColorIcon} width={23} height={23} alt=\"\" />\n          <div className=\"col-auto px-2\" >SeroTracker</div>\n        </Link>\n      </div>\n      <div className=\"App-tabs h-100 p-0 col-auto space-evenly\">\n        <div className={getTabClass('/Dashboard')}>\n          <Link to=\"/Dashboard\">\n            {isMobileDeviceOrTablet ?\n              <FontAwesomeIcon icon={faGlobeAmericas} size=\"lg\" /> :\n              Translate('Dashboard')}\n          </Link>\n        </div>\n        <div className={getTabClass('/Data')}>\n          <Link to=\"/Data\">\n            {isMobileDeviceOrTablet ?\n              <FontAwesomeIcon icon={faFileAlt} size=\"lg\" /> :\n              Translate('Data')}\n          </Link>\n        </div>\n        <div className={getTabClass('/About')}>\n          <Link to=\"/About\">\n            {isMobileDeviceOrTablet ?\n              <FontAwesomeIcon icon={faUsers} size=\"lg\" /> :\n              Translate('About')}\n          </Link>\n        </div>\n        {/* <div className={getTabClass('')}>\n          <Settings />\n        </div> */}\n      </div>\n    </header >\n  )\n}","import React, { useContext, useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport About from './components/pages/About';\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\nimport Data from './components/pages/Data';\nimport { NavBar } from \"./components/shared/NavBar\";\nimport { AppContext } from \"./context\";\nimport httpClient from \"./httpClient\";\nimport { setLanguageType } from \"./utils/translate/translateService\";\n\nfunction App() {\n\n  const [{ language }, dispatch] = useContext(AppContext);\n  // DATA\n  useEffect(() => {\n    const api = new httpClient()\n    const getAirtableRecords = async () => {\n      const response = await api.getAirtableRecords()\n      dispatch({\n        type: 'GET_AIRTABLE_RECORDS',\n        payload: response\n      });\n    }\n\n    const handleResize = () => {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n    }\n\n    window.addEventListener('resize', handleResize)\n    getAirtableRecords();\n    handleResize();\n\n    setLanguageType(language);\n  }, [dispatch, language])\n\n  // ROUTING TABS\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route path=\"/About\">\n          <About />\n        </Route>\n        <Route path=\"/Dashboard\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/Data\">\n          <Data />\n        </Route>\n        <Redirect exact from=\"/\" to=\"/Dashboard\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Location, LocationListener, UnregisterCallback } from 'history'\r\nimport { useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst sendPageView: LocationListener = (location: Location): void => {\r\n  ReactGA.set({ page: location.pathname })\r\n  ReactGA.pageview(location.pathname)\r\n}\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n  trackingId?: string;\r\n}\r\nconst GAListener = ({ children, trackingId }: Props): JSX.Element => {\r\n  const history = useHistory()\r\n  useEffect((): UnregisterCallback | void => {\r\n    if (trackingId) {\r\n      ReactGA.initialize(trackingId,\r\n        {\r\n          titleCase: false,\r\n          gaOptions: {\r\n            cookieDomain: 'none'\r\n          }\r\n        })\r\n      sendPageView(history.location, 'REPLACE')\r\n      return history.listen(sendPageView)\r\n    }\r\n  }, [history, trackingId])\r\n\r\n  return children\r\n}\r\n\r\nexport default GAListener","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport { AppContextProvider } from './context';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport GAListener from './utils/analyticsUtils';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AppContextProvider>\n        <GAListener trackingId={process.env.REACT_APP_GA_TRACKERID}>\n          <App />\n        </GAListener>\n      </AppContextProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}