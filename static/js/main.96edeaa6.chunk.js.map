{"version":3,"sources":["assets/images/colored-icon.svg","types.ts","utils/translate/translateService.ts","components/pages/About.tsx","constants.ts","context.tsx","metaAnalysis.ts","components/shared/InformationIcon.tsx","components/charts/StudyDetailsModal.tsx","components/charts/ReferencesTable.tsx","components/charts/Charts.tsx","utils/translate/caseChanger.ts","utils/mapUtils.ts","components/map/Legend.tsx","components/map/Map.tsx","components/pages/Dashboard/CenterComponent.tsx","components/sidebar/right-sidebar/Filters.tsx","components/sidebar/left-sidebar/TotalStats.tsx","components/sidebar/left-sidebar/CountryList.tsx","components/mobile/MobileComponents.tsx","components/sidebar/left-sidebar/LeftSidebar.tsx","components/sidebar/right-sidebar/LastUpdated.tsx","components/sidebar/right-sidebar/RightSidebar.tsx","components/pages/Dashboard/Dashboard.tsx","components/pages/Data.tsx","components/shared/NavBar.tsx","httpClient.ts","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","LanguageType","AggregationFactor","recursiveFind","object","keys","index","nextObj","length","language","english","Translate","text","specifier","substitution","addSpaces","translationDictionary","English","French","translatedString","Object","forEach","key","value","replace","RegExp","e","About","isMobileDeviceOrTablet","useMediaQuery","maxWidth","renderBioBlock","name","description","linkedIn","email","twitter","map","line","href","target","rel","icon","faLinkedin","className","faTwitter","faEnvelope","src","alt","height","toLowerCase","AppContext","createContext","getEmptyFilters","source_type","Set","study_status","test_type","country","population_group","sex","age","risk_of_bias","isotypes_reported","add","initialState","healthcheck","airtable_records","filtered_records","filters","filter_options","data_page_state","mapOpen","updated_at","filterRecords","records","filter_function","record","filter_key","size","Array","isArray","match","item","includes","in_filter","i","has","buildFilterFunction","filter","getFilterOptions","seroprevalence","denominator","isotype_reported","reducer","state","action","new_filters","type","payload","filter_type","filter_value","AppContextProvider","props","useReducer","dispatch","Provider","children","transformPrevalence","p","N","method","Math","log","asin","sqrt","n","transformVariance","backTransform","t","exp","sin","sign","cos","aggregateRecords","total_positive","total_tested","filteredRecords","n_studies","pooled_p","error","pooled_var","var_sum","inv_var_sum","p_over_var_sum","inv_n_sum","prevalence","variance","conf_inter","overall_n","aggregatedRecord","num_studies","getAggregateData","aggregation_factor","grouped_records","aggregationString","toString","recordStrings","group","push","groupRecords","aggregate_data","result","InformationIcon","color","tooltip","tooltipHeader","offset","position","popupSize","Popup","random","popperModifiers","preventOverflow","boundariesElement","trigger","faInfoCircle","Header","Content","StudyDetailsModal","useState","open","setOpen","getPossibleNullString","nullString","undefined","getPossibleNullStringArray","join","source_name","first_author","lead_org","publish_date","publisher","url","summary","study_type","city","sampling_method","sampling_end_date","sampling_start_date","sensitivity","specificity","manufacturer","approving_regulator","Modal","centered","closeOnEscape","closeOnDimmerClick","onClose","style","marginTop","marginLeft","marginRight","top","left","Button","onClick","padding","faTimes","Description","toUpperCase","to","getAuthorString","getPublishString","toFixed","ReferencesTable","useContext","activePage","setActivePage","boundaryRange","siblingRange","totalPages","setTotalPages","pageLength","setPageLength","column","setColumn","direction","setDirection","data","setData","pageLengthOptions","isMobileDevice","useEffect","splicedData","_","orderBy","o","splice","ceil","buildHeaderCell","sortColumn","displayName","Table","HeaderCell","sorted","clickedColumn","celled","sortable","fixed","striped","Row","Body","Cell","getGeography","displaySex","displayAge","getPopulation","Footer","Pagination","onPageChange","event","Dropdown","inline","options","defaultValue","onChange","Charts","yAxisSelection","setYAxis","aggregatedRecords","setRecords","yAxisOptions","reAggregatedRecords","chartData","sortBy","reverse","CustomTooltip","active","label","recordError","find","placeholder","fluid","selection","width","layout","barGap","strokeDasharray","right","dataKey","interval","longestWord","getYAxisWidth","content","fill","maxBarSize","barSize","x","y","errorBarWidth","textAnchor","dominantBaseline","strokeWidth","toPascalCase","str","upperFirst","camelCase","getLogit","percentage","decimal","getDecimalFromLogit","logit","colors","getColor","d","buckets","Countries","getCountryName","optionString","code","console","translatedCountryName","Legend","useLeaflet","labels","from","background","Map","mapRef","createRef","geoJsonRef","mapRecords","setMapRecords","forceUpdate","setForceUpdate","features","maxSeroprevalence","max","apply","properties","roundedMax","step","logitStep","parseFloat","getBuckets","prevalenceCountryDict","reduce","a","importGeo","feature","bounds","latLngBounds","maxBounds","ref","center","zoom","bounceAtZoomLimits","minZoom","enableHighAccuracy","maxBoundsViscosity","TileLayer","process","attribution","tileSize","id","zoomOffset","GeoJSON","onEachFeature","layer","bindPopup","ReactDOMServer","renderToString","createPopup","closeButton","autoPan","on","mouseover","openPopup","setStyle","weight","dashArray","fillOpacity","zIndex","bringToFront","highlightFeature","mouseout","closePopup","opacity","resetHighlight","mousemove","getPopup","setLatLng","latlng","click","current","leafletElement","fitBounds","getBounds","zoomToFeature","fillColor","CentralPiece","getClass","shouldHighlight","Filters","formatOptions","formatted_options","jsonObjectString","alternativeString","buildSectionHeader","header_text","tooltip_text","tooltip_header","buildFilterDropdown","multiple","search","clearable","addFilter","TotalStats","countries","self","indexOf","CountryList","aggregatedData","MobileComponents","showMobileFilters","setShowFilters","showSummary","setShowSummary","handleFilterToggle","showMobile","Sidebar","Pushable","as","Segment","Menu","animation","vertical","visible","fontWeight","Pusher","faFilter","faBars","LeftSidebar","LastUpdated","RightSidebar","Dashboard","maxDeviceWidth","Data","renderPane","Tab","Pane","title","panes","menuItem","render","toLocaleLowerCase","NavBar","tab","setTab","getTabClass","tabName","location","useLocation","pathname","usePageViews","MultiColorIcon","faGlobeAmericas","faFileAlt","faUsers","httpClient","url_full","fetch","res","status","json","response_json","this","httpGet","response","SOURCE_NAME","LEAD_ORG","FIRST_AUTHOR","SOURCE_TYPE","STUDY_STATUS","STUDY_TYPE","TEST_TYPE","ISOTYPES","MANUFACTURER","APPROVAL","SENSITIVITY","SPECIFICITY","PUB_DATE","PUBLISHER","COUNTRY","STATE","CITY","POPULATION_GROUP","SEX","AGE","DENOMINATOR","SUMMARY","SERUM_POS_PREVALENCE","sample_size","SAMPLE_SIZE","SAMPLING","SAMPLING_START","SAMPLING_END","OVERALL_RISK_OF_BIAS","URL","updated_at_words","split","updated_at_string","App","api","getAirtableRecords","path","exact","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.96edeaa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/colored-icon.ab2ccbe8.svg\";","\nexport type AirtableRecord = {\n    source_name: string | null,\n    lead_org?: string | null,\n    first_author?: string | null,\n    source_type: string | null,\n    study_status: string | null,\n    test_type: string[] | null,\n    isotypes_reported: string[] | null,\n    manufacturer?: string | null,\n    approving_regulator?: string | null,\n    sensitivity?: number | null,\n    specificity?: number | null,\n    country: string | null,\n    state?: string[] | null,\n    city?: string[] | null,\n    population_group: string[] | null,\n    sex: string | null,\n    age: string[] | null,\n    denominator: number | null,\n    seroprevalence: number | null,\n    publish_date?: string | null,\n    publisher?: string | null,\n    risk_of_bias: string | null,\n    study_type?: string | null,\n    sample_size?: string | null,\n    sampling_method?: string | null,\n    sampling_start_date?: string | null,\n    sampling_end_date?: string | null,\n    summary?: string | null,\n    url?: string | null,\n};\n\nexport type AggregatedRecord = {\n    error: number[];\n    n: number;\n    name: string;\n    num_studies: number;\n    seroprevalence: number;\n}\n\n// Each filter will be a javascript set\n// TODO: find typing to represent sets\nexport type Filters = {\n    source_type: any,\n    study_status: any,\n    test_type: any,\n    country: any,\n    population_group: any,\n    sex: any,\n    age: any,\n    risk_of_bias: any,\n    isotypes_reported: any\n};\n\nexport type FilterType =  'country' | 'population_group' | 'sex' | 'age' | 'study_status' | 'test_type' | 'source_type' | 'risk_of_bias' | 'isotypes_reported';\n\nexport enum LanguageType  {\n  french = 'fr',\n  english ='en' \n}\n\nexport type State = {\n    healthcheck: string,\n    airtable_records: AirtableRecord[],\n    filtered_records: AirtableRecord[],\n    filters: Filters,\n    filter_options: Filters,\n    updated_at: string,\n    data_page_state: DataPageState,\n    language: LanguageType\n};\n\nexport enum AggregationFactor {\n    country = 'country',\n    population_group = 'population_group',\n    sex = 'sex',\n    age = 'age',\n    study_status = 'study_status',\n    test_type = 'test_type',\n    source_type = 'source_type',\n    risk_of_bias = 'risk_of_bias',\n    isotypes_reported = 'isotypes_reported',\n}\n\nexport type DataPageState = {\n    mapOpen: boolean\n}\n\nexport type CustomMatcherResult = {\n    pass: boolean\n    message: string \n}\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"../../context\";\r\nimport English from './en.json';\r\nimport French from './fr.json';\r\nimport { LanguageType } from \"../../types\";\r\n\r\ninterface TranslateStringProps {\r\n  text: string;\r\n}\r\n\r\n// Recursive Typings for nested JSON objects\r\ntype JsonRecord<T> = Record<string, T | string>;\r\ninterface Json extends JsonRecord<Json> { };\r\n\r\nconst recursiveFind = (object: any, keys: string[], index: number): string => {\r\n  const key = keys[index];\r\n  const nextObj = object[key];\r\n\r\n  if (index + 1 === keys.length) {\r\n    return nextObj;\r\n  }\r\n  return recursiveFind(nextObj, keys, index + 1);\r\n\r\n}\r\n\r\nlet language: LanguageType = LanguageType.english;\r\n\r\nexport const setLanguageType = (newLanguage: LanguageType) => {\r\n  language = newLanguage;\r\n}\r\n\r\nexport default function Translate(\r\n  text: string,\r\n  specifier: string[] | null = null,\r\n  substitution: Record<string, string | number> | null = null,\r\n  addSpaces: [boolean, boolean] | null = null\r\n): string {\r\n  const translationDictionary: Json = language === LanguageType.english ?\r\n    English as Json : French as Json;\r\n\r\n  try {\r\n    let translatedString = translationDictionary[text];\r\n\r\n    if (!translatedString) {\r\n      return (specifier ? specifier[specifier.length - 1] : text) + \"*\";\r\n    }\r\n\r\n    if (specifier) {\r\n      translatedString = recursiveFind(translatedString, specifier, 0);\r\n    }\r\n\r\n    if (substitution) {\r\n      Object.keys(substitution).forEach(key => {\r\n        const value = substitution[key];\r\n        const replace = new RegExp(key, \"g\");\r\n        translatedString = (translatedString as string).replace(replace, `${value}`);\r\n      });\r\n    }\r\n\r\n    if (addSpaces && addSpaces[0]) {\r\n      translatedString = \" \" + translatedString;\r\n    }\r\n\r\n    if (addSpaces && addSpaces[1]) {\r\n      translatedString += \" \";\r\n    }\r\n    return translatedString as string;\r\n  }\r\n  catch (e) {\r\n    return `No translation for string ${text}`\r\n  }\r\n}","import { faLinkedin, faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\nimport Translate from \"../../utils/translate/translateService\";\nimport './static.css';\n\nexport default function About() {\n    const isMobileDeviceOrTablet = useMediaQuery({ maxWidth: mobileDeviceOrTabletWidth })\n    function renderBioBlock(name: string,\n        description: string[],\n        linkedIn: string | null = null,\n        email: string | null = null,\n        twitter: string | null = null) {\n        return (\n            <div>\n                <b>\n                    {name}\n                </b>\n                <br />\n                {description.map((line) => {\n                    return (\n                        <div>\n                            {line}\n                            <br />\n                        </div>\n                    )\n                })}\n                {linkedIn ? <a href={linkedIn} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} className=\"mr-1 linked-in\" /></a> : null}\n                {twitter ? <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faTwitter} className=\"mx-1 twitter\" /></a> : null}\n                {email ? <a href={`mailto:${email}`}><FontAwesomeIcon icon={faEnvelope} className=\"ml-1 email\" /></a> : null}\n            </div>\n        )\n    }\n    return (\n        <div className=\"page col-12\">\n            <div className={isMobileDeviceOrTablet ? \"pb-2\" : \"static-content pb-2\"}>\n                <h1>\n                    {Translate('AboutSeroTracker')}\n                </h1>\n                <p>\n                    {Translate('AboutPage', ['AboutSection', 'PartOne'])}<b>{Translate('AboutPage', ['AboutSection', 'PartTwo'], null, [true, false])}</b>\n                </p>\n                <p>\n                    <a href=\"https://www.covid19immunitytaskforce.ca/\">\n                        <img src=\"https://www.covid19immunitytaskforce.ca/wp-content/themes/pena-lite-child/CITF_logo_ENG.svg\" alt=\"COVID-19 Immunity Task Force Logo\" height=\"45\"></img>\n                    </a>\n                </p>\n                <p>\n                    {Translate('AboutPage', ['AboutSection', 'PartThree'])}\n                    <a href=\"https://www.covid19immunitytaskforce.ca/\">{Translate('AboutPage', ['AboutSection', 'PartFour'], null, [true, true])}</a>\n                    {Translate('AboutPage', ['AboutSection', 'PartFive'])}\n                    <a href=\"https://www.mcgill.ca/spgh/\">{Translate('AboutPage', ['AboutSection', 'PartSix'], null, [true, false])}</a>.\n                     {Translate('AboutPage', ['AboutSection', 'PartSeven'], null, [true, false])}\n                    <a href=\"https://www.covid19immunitytaskforce.ca/research/global-serological-knowledge-hub/\">{Translate('AboutPage', ['AboutSection', 'PartEight'], null, [true, false])}</a>.\n                </p>\n                <p>\n                    <a href=\"https://www.mapbox.com/\">Mapbox</a> {Translate('AboutPage', ['Mapbox'])}.\n                </p>\n                <h2>\n                    {Translate('ContactUs')}\n                </h2>\n                <p>\n\n                    {Translate('AboutPage', ['ContactSection', 'SectionOne'])}\n                </p>\n                <ul>\n                    <li>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartOne'], null, [true, true])}\n                        <b>{Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartTwo'])}</b>,\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartThree'], null, [true, true])}\n                        <a href=\"mailto:rahul.arora@balliol.ox.ac.uk\">rahul.arora@balliol.ox.ac.uk</a>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointOne', 'PartFour'], null, [true, true])}\n                        <a href=\"mailto:tingting.yan@mail.utoronto.ca\">tingting.yan@mail.utoronto.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('For')}<b>{Translate('AboutPage', ['ContactSection', 'BulletPointTwo', 'PartOne'], null, [true, false])}</b>,\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointTwo', 'PartTwo'], null, [true, true])}\n                        <a href=\"mailto:niklas.bobrovitz@mail.utoronto.ca\">niklas.bobrovitz@mail.utoronto.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('For')}<b>{Translate('AboutPage', ['ContactSection', 'BulletPointThree', 'PartOne'], null, [true, false])}</b>,\n                         {Translate('AboutPage', ['ContactSection', 'BulletPointThree', 'PartTwo'], null, [true, true])}\n                        <a href=\"mailto:niduarte@uwaterloo.ca\"> niduarte@uwaterloo.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('For')} <b>{Translate('AboutPage', ['ContactSection', 'BulletPointFour', 'PartOne'], null, [true, false])}</b>,\n                         {Translate('AboutPage', ['ContactSection', 'BulletPointFour', 'PartTwo'], null, [true, true])}\n                        <a href=\"mailto:jordan.vanwyk@uwaterloo.ca\"> jordan.vanwyk@uwaterloo.ca</a>.\n                    </li>\n                    <li>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointFive', 'PartOne'])}\n                        <b>{Translate('AboutPage', ['ContactSection', 'BulletPointFive', 'PartTwo'], null, [true, false])}</b>\n                        {Translate('AboutPage', ['ContactSection', 'BulletPointFive', 'PartThree'], null, [true, true])}\n                        <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://forms.gle/XWHQ7QPjQnzQMXSz8\">{Translate('ThisForm').toLowerCase()}</a>.\n                    </li>\n                </ul>\n                <h1>\n                    {Translate('OurTeam')}\n                </h1>\n                <h2 className=\"team-name-text\">\n                    {Translate('ScientificLead')}\n                </h2>\n                <div>\n                    {renderBioBlock('Tim Evans', [Translate('TimBiography', ['PartOne']), Translate('TimBiography', ['PartTwo'])])}\n                </div>\n                <h2 className=\"team-name-text\">\n                    {Translate('ResearchTeam')}\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Niklas Bobrovitz ', [Translate('UniversityOf', null, { \"NAME\": \"Oxford\" }), Translate('UniversityOf', null, { \"NAME\": \"Toronto\" })], 'https://www.linkedin.com/in/nik-bobrovitz-19a117179/', null, 'https://twitter.com/nikbobrovitz')}\n                    {renderBioBlock('Emily Boucher', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], null, 'emily.boucher@ucalgary.ca')}\n                    {renderBioBlock('Nathan Duarte', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/duartenathan/', 'nathanduarte1@gmail.com', 'https://twitter.com/_nathan_duarte_')}\n                    {renderBioBlock('Hannah Rahim', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://www.linkedin.com/in/hannah-rahim/', null, 'https://twitter.com/Hannah_Rahim1')}\n                    {renderBioBlock('Tingting Yan', [Translate('UniversityOf', null, { \"NAME\": \"Toronto\" })], 'https://www.linkedin.com/in/tingting-yan/', '', 'https://twitter.com/TingtingYan_')}\n                    {renderBioBlock('Christian Cao', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://ca.linkedin.com/in/christian-cao-275b78190', 'ccao.canada@gmail.com')}\n                    {renderBioBlock('Claire Donnici', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], null, 'claire.donnici@ucalgary.ca', 'https://twitter.com/ClaireDonnici')}\n                    {renderBioBlock('Natasha Ilincic', [Translate('UniversityOf', null, { \"NAME\": \"Guelph\" })], null, 'natasha.ilincic@gmail.com')}\n                    {renderBioBlock('Michael Liu', [Translate('UniversityOf', null, { \"NAME\": \"Oxford\" }), Translate('BlankUniversity', null, { \"NAME\": \"Harvard\" })], 'https://www.linkedin.com/in/michael-liu-8728249a/', 'liu.michael222@gmail.com', 'https://twitter.com/mliu_canada')}\n                    {renderBioBlock('Brianna Rosgen', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://ca.linkedin.com/in/brianna-rosgen-b12136134', 'Brianna.rosgen@ucalgary.ca', 'https://twitter.com/briannarosgen')}\n                    {renderBioBlock('Mitchell Segal', [Translate('UniversityOf', null, { \"NAME\": \"Toronto\" })], null, 'mitchell.segal@mail.utoronto.ca')}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Development Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Austin Atmaja', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/austinatmaja', null, null)}\n                    {renderBioBlock('Rahul Arora', [Translate('UniversityOf', null, { \"NAME\": \"Oxford\" })], 'https://www.linkedin.com/in/rahularorayyc/', 'rahularoradfs@gmail.com', 'https://mobile.twitter.com/RahulAroraAB')}\n                    {renderBioBlock('Abel Joseph ', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/abel-joseph/', 'abel.joseph@uwaterloo.ca')}\n                    {renderBioBlock('Ewan May', [Translate('SchoolName', ['Schulich']), Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], 'https://www.linkedin.com/in/ewan-may', 'ewan.may@ucalgary.ca')}\n                    {renderBioBlock('Simona Rocco', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/simona-rocco/', 'serocco@uwaterloo.ca')}\n                    {renderBioBlock('Jordan Van Wyk', [Translate('UniversityOf', null, { \"NAME\": \"Waterloo\" })], 'https://www.linkedin.com/in/jordanvanwyk/', 'jordanvanwyk@outlook.com', 'https://twitter.com/jordanvw_')}\n                    {renderBioBlock('Abhinav Pillai\t', [Translate('UniversityOf', null, { \"NAME\": \"Calgary\" })], null, 'abhinav.arunpillai@ucalgary.ca')}\n                </div>\n                <h2 className=\"team-name-text\">\n                    Economics Team\n                </h2>\n                <div className=\"bio-grid-container\">\n                    {renderBioBlock('Ruby Zhang', ['Harvard University'], 'https://www.linkedin.com/in/ruby-zhang-022821ab')}\n                    {renderBioBlock('Sahil Bablani ', ['CPP Investment Board'])}\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const mobileDeviceOrTabletWidth = 1200;\r\nexport const mobileDeviceWidth = 600;","import React, { createContext, Dispatch, useReducer } from \"react\";\nimport { AirtableRecord, Filters, State, LanguageType } from \"./types\";\n\nexport const AppContext = createContext({} as [State, Dispatch<Record<string, any>>]);\n\nexport function getEmptyFilters(): Filters {\n  return {\n    source_type: new Set(),\n    study_status: new Set(),\n    test_type: new Set(),\n    country: new Set(),\n    population_group: new Set(),\n    sex: new Set(),\n    age: new Set(),\n    risk_of_bias: new Set(),\n    isotypes_reported: new Set()\n  }\n}\n\n// Note: filters = elements that user has chosen to filter by\n// filter_options = all the elements that users could filter by\nconst initial_filters: Filters = getEmptyFilters();\ninitial_filters.population_group.add(['General population']);\nconst initialState: State = {\n  healthcheck: '',\n  airtable_records: [],\n  filtered_records: [],\n  filters: getEmptyFilters(),\n  filter_options: getEmptyFilters(),\n  data_page_state: {\n    mapOpen: true\n  },\n  language: LanguageType.english,\n  updated_at: ''\n};\n\nfunction buildFilterFunction(filters: Record<string, any>) {\n  // Returns a function that can be used to filter an array of airtable records\n  return (record: Record<string, any>) => {\n    for (const filter_key in filters) {\n      if ((filters[filter_key] instanceof Set) && (filters[filter_key].size > 0)) {\n        if (record[filter_key] === null) {\n          return false;\n        }\n        // Handle case where field to be filtered is an array\n        if (Array.isArray(record[filter_key])) {\n          // Note: isotypes filter works on an 'and' basis\n          // Unlike other filters, which work on an 'or' basis\n          // TODO: make logic flow here more generalized in case we need other filters in the future with similar behaviour\n          if (filter_key === 'isotypes_reported') {\n            let match = true;\n            filters[filter_key].forEach((item: string) => {\n              if (!(record[filter_key].includes(item))) {\n                match = false;\n              }\n            });\n            return match;\n          }\n          // Iterate through the record's values and check if any of them\n          // match the values accepted by the filter\n          let in_filter = false;\n          for (let i = 0; i < record[filter_key].length; i++) {\n            if (filters[filter_key].has(record[filter_key][i])) {\n              in_filter = true;\n              break;\n            }\n          }\n          if (!in_filter) {\n            return false;\n          }\n        }\n        else {\n          if (!(filters[filter_key].has(record[filter_key]))) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n}\n\nexport function filterRecords(filters: Filters, records: AirtableRecord[]) {\n  const filter_function = buildFilterFunction(filters);\n  if (records) {\n    const filtered_records = records.filter(filter_function);\n    return filtered_records;\n  }\n  return [];\n\n}\n\nfunction getFilterOptions(records: AirtableRecord[]) {\n  const filter_options: Filters = getEmptyFilters();\n\n  if (!records) {\n    return filter_options;\n  }\n  records.forEach((record: AirtableRecord) => {\n    // TODO: Refactor to be more DRY\n    if ((record.seroprevalence !== null) && (record.denominator !== null)) {\n      if (record.country) {\n        filter_options.country.add(record.country);\n      }\n      if (record.study_status) {\n        filter_options.study_status.add(record.study_status);\n      }\n      if (record.source_type) {\n        filter_options.source_type.add(record.source_type);\n      }\n      if (record.sex) {\n        filter_options.sex.add(record.sex);\n      }\n      if (record.risk_of_bias) {\n        filter_options.risk_of_bias.add(record.risk_of_bias);\n      }\n      if (record.test_type) {\n        record.test_type.forEach((test_type) => {\n          filter_options.test_type.add(test_type);\n        })\n      }\n      if (record.population_group) {\n        record.population_group.forEach((population_group) => {\n          filter_options.population_group.add(population_group);\n        });\n      }\n      if (record.age) {\n        record.age.forEach((age) => {\n          filter_options.age.add(age);\n        });\n      }\n      if (record.isotypes_reported) {\n        record.isotypes_reported.forEach((isotype_reported) => {\n          if (isotype_reported !== 'Not reported') {\n            filter_options.isotypes_reported.add(isotype_reported);\n          }\n        });\n      }\n    }\n  });\n\n  return filter_options;\n}\n\nconst reducer = (state: State, action: Record<string, any>) => {\n  const new_filters: any = state.filters;\n  switch (action.type) {\n    case \"HEALTHCHECK\":\n      return {\n        ...state,\n        healthcheck: action.payload\n      };\n    case \"SELECT_DATA_TAB\":\n      return {\n        ...state,\n        data_page_state: { ...state.data_page_state, mapOpen: action.payload }\n      }\n    case \"SELECT_LANGUAGE\":\n      return {\n        ...state,\n        language: action.payload\n      }\n    case \"GET_AIRTABLE_RECORDS\":\n      return {\n        ...state,\n        airtable_records: action.payload.airtable_records,\n        filtered_records: filterRecords(state.filters, action.payload.airtable_records),\n        updated_at: action.payload.updated_at,\n        filter_options: getFilterOptions(action.payload.airtable_records)\n      }\n    case \"UPDATE_FILTER\":\n      new_filters[action.payload.filter_type] = new Set(action.payload.filter_value)\n      return {\n        ...state,\n        filters: new_filters,\n        filtered_records: filterRecords(new_filters, state.airtable_records)\n      }\n    default:\n      return state\n  }\n};\n\nexport const AppContextProvider = (props: Record<string, any>) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider\n      value={[state, dispatch]}>\n      {props.children}\n    </AppContext.Provider>\n  );\n};","import { AirtableRecord, AggregationFactor, AggregatedRecord, FilterType } from \"./types\"\n\nconst Z_SCORE: number = 1.96;\nexport const MIN_DENOMINATOR: number = 0;\n\nfunction transformPrevalence (p: number, N: number, method: string){\n    switch(method as any) {\n        case \"inverse_variance\": {\n            return p; \n        }\n        case \"logit\": {\n            return Math.log(p / (1 - p))\n        }\n        case \"arcsin\": {\n            return Math.asin(Math.sqrt(p))\n        }\n        case \"double_arcsin\": {\n            const n = N * p\n            return (Math.asin(Math.sqrt(n / (N + 1))) + Math.asin(Math.sqrt((n + 1) / (N + 1))) )\n        }\n        case \"double_arcsin_RSM\": {\n            const n = N * p\n            return 0.5 * (Math.asin(Math.sqrt(n / (N + 1))) + Math.asin(Math.sqrt((n + 1) / (N + 1))) )\n        }\n    }\n}\n\nfunction transformVariance(p: number, N: number, method: string){\n    switch(method as any){\n        case \"inverse_variance\": {\n            return p * (1 - p) / N; \n        }\n        case \"logit\": {\n            return 1 / (N * p) + 1 / (N * (1 - p));\n        }\n        case \"arcsin\": {\n            return 1 / (4 * N)\n        }\n        case \"double_arcsin\": {\n            return 1 / (N + 0.5)\n        }\n        case \"double_arcsin_RSM\": {\n            return 1 / (4 * N + 2)\n        }\n    }\n}\n\nfunction backTransform(t: number, n: number, method: string){\n    switch(method as any){\n        case \"inverse_variance\": {\n            return t;\n        }\n        case \"logit\": {\n            return Math.exp(t) / (Math.exp(t) + 1);\n        }\n        case \"arcsin\": {\n            return Math.sin(t) ** 2\n        }\n        case \"double_arcsin\": {\n            return Math.sin(t / 2) ** 2\n        }\n        case \"double_arcsin_RSM\": {\n            return 0.5 * (1 - Math.sign(Math.cos(t)) \n            * Math.sqrt(1 - (Math.sin(2 * t) + (Math.sin(2 * t) - 2 * Math.sin(2 * t)) / n) ** 2))\n        }\n    }\n}\n\nexport function aggregateRecords(records: AirtableRecord[], method: string = \"double_arcsin_RSM\") {\n    let total_positive = 0;\n    let total_tested = 0;\n\n    const filteredRecords = records.filter(record => ((record.seroprevalence !== null) && (record.denominator !== null && record.denominator >= MIN_DENOMINATOR)));\n    const n_studies = filteredRecords.length;\n\n    let pooled_p: number = 0;\n    let error: number[] = [0, 0];\n\n    if (method === \"naive_pooling\"){\n        filteredRecords.forEach((record: AirtableRecord) => {\n            total_positive += (record.seroprevalence as number) * (record.denominator as number);\n            total_tested += (record.denominator as number);\n        });\n\n        pooled_p = total_positive / total_tested;\n\n        const pooled_var = ((pooled_p) * (1 - pooled_p)) / total_tested;\n        error = [Z_SCORE * Math.sqrt(pooled_var), Z_SCORE * Math.sqrt(pooled_var)];\n    } else {\n        let var_sum = 0;\n        let inv_var_sum = 0;\n        let p_over_var_sum = 0;\n        let inv_n_sum = 0;\n        let prevalence = 0;\n        let variance = 0;\n\n        \n        filteredRecords.forEach((record: AirtableRecord) => {\n            if ((record.seroprevalence !== null) && (record.denominator !== null) && (record.seroprevalence !== 0) && (record.denominator !== 0)) {\n                prevalence = transformPrevalence(record.seroprevalence, record.denominator, method)!;\n                variance = transformVariance(record.seroprevalence, record.denominator, method)!;\n                var_sum = var_sum + variance;\n                inv_var_sum = inv_var_sum + (1 / variance);\n                p_over_var_sum = p_over_var_sum + (prevalence / variance);\n                total_tested = total_tested + record.denominator;\n                inv_n_sum = inv_n_sum + 1 / record.denominator;\n            }\n        });\n\n        pooled_p = p_over_var_sum / inv_var_sum;\n        const conf_inter = [pooled_p - Z_SCORE * Math.sqrt(var_sum), pooled_p + Z_SCORE * Math.sqrt(var_sum)]\n\n        const overall_n = 1 / (inv_n_sum / n_studies)\n\n        pooled_p = backTransform(pooled_p, overall_n, method)!; \n        error = [pooled_p - backTransform(conf_inter[0], overall_n, method)!, backTransform(conf_inter[1], overall_n, method)! - pooled_p];\n    }\n\n    if (pooled_p - error[0] < 0) {error[0] = pooled_p}\n    if (pooled_p + error[1] > 1) {error[1] = 1 - pooled_p}\n    \n    const aggregatedRecord: AggregatedRecord = {\n        seroprevalence: pooled_p * 100,\n        error: [error[0] * 100, error[1] * 100],\n        n: total_tested,\n        num_studies: n_studies,\n        name: \"\"\n    }\n    return aggregatedRecord\n}\n\n// Given an aggregation factor (either 'country' or 'populations')\n// get pooled seroprevalence, error bounds, and n (total number of tests) for each country or population\nexport function getAggregateData(records: AirtableRecord[], aggregation_factor: AggregationFactor) {\n    const grouped_records: Record<string, AirtableRecord[]> = {}\n    const aggregationString: string = aggregation_factor.toString();\n    records.forEach((record: AirtableRecord) => {\n        const recordStrings = record[aggregationString as FilterType];\n        if ((record.seroprevalence !== null) && (record.denominator !== null) && (recordStrings != null)) {\n            const strings = recordStrings instanceof Array ? recordStrings : [recordStrings];\n            strings.forEach( group => groupRecords(grouped_records, record, group) )\n        }\n    });\n\n\n    const aggregate_data: AggregatedRecord[] = []\n\n    for (const name in grouped_records) {\n        const result = aggregateRecords(grouped_records[name]);\n        aggregate_data.push({ ...result, name });\n    }\n    return aggregate_data;\n}\n\nfunction groupRecords(grouped_records: Record<string, AirtableRecord[]>, record: AirtableRecord, group: string) {\n    if (group in grouped_records) {\n        grouped_records[group].push(record);\n    }\n    else {\n        grouped_records[group] = [record];\n    }\n}\n","import { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport { Popup } from \"semantic-ui-react\";\r\n\r\ninterface InformationIconProps {\r\n  color: string;\r\n  size: \"xs\" | \"lg\" | \"sm\" | \"1x\" | \"2x\" | \"3x\" | \"4x\" | \"5x\" | \"6x\" | \"7x\" | \"8x\" | \"9x\" | \"10x\" | undefined,\r\n  position?: \"top left\" | \"top right\" | \"bottom right\" | \"bottom left\" | \"right center\" | \"left center\" | \"top center\" | \"bottom center\" | undefined,\r\n  tooltip: string | React.ReactNode;\r\n  tooltipHeader?: string;\r\n  offset: string | number;\r\n  popupSize?: \"mini\" | \"tiny\" | \"small\" | \"large\" | \"huge\";\r\n}\r\n\r\nexport default function InformationIcon(props: InformationIconProps) {\r\n  const { color, size, tooltip, tooltipHeader, offset, position, popupSize=\"small\" } = props;\r\n  return (\r\n    <div className=\"px-2\">\r\n      <Popup\r\n        key={Math.random()}\r\n        offset={offset}\r\n        position={position}\r\n        size={popupSize}\r\n        //fix for janky popup positioning due to overflow styling\r\n        popperModifiers={{ preventOverflow: { boundariesElement: \"window\" } }}\r\n        trigger={\r\n          <FontAwesomeIcon\r\n            icon={faInfoCircle}\r\n            color={color}\r\n            size={size} />}>\r\n        {tooltipHeader && (\r\n          <Popup.Header className=\"flex left\">{tooltipHeader}</Popup.Header>\r\n        )}\r\n        <Popup.Content className=\"flex left\">{tooltip}</Popup.Content>\r\n      </Popup>\r\n    </div>\r\n  );\r\n}\r\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Modal } from \"semantic-ui-react\";\r\nimport { AirtableRecord } from \"../../types\";\r\nimport \"./StudyDetailsModal.css\";\r\nimport Translate from \"../../utils/translate/translateService\";\r\n\r\n// TODO: Extract this into a modal service \r\n\r\ninterface StudyDetailsModalProps {\r\n  record: AirtableRecord\r\n}\r\nexport default function StudyDetailsModal(props: StudyDetailsModalProps) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const inlineStyle = {\r\n    modal: {\r\n      marginTop: '0px !important',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      top: 'auto',\r\n      left: 'auto',\r\n      height: 'auto'\r\n    }\r\n  };\r\n\r\n  const getPossibleNullString = (nullString: string | number | null | undefined) => {\r\n    if (nullString === null || nullString === undefined) {\r\n      return \"Not Reported\"\r\n    }\r\n    return nullString\r\n  }\r\n\r\n  const getPossibleNullStringArray = (nullString: string[] | null | undefined) => {\r\n    if (nullString === null || nullString === undefined) {\r\n      return \"Not Reported\"\r\n    }\r\n    return nullString.join(\", \")\r\n  }\r\n\r\n  const getAuthorString = (first_author: string | undefined | null, lead_org: string | null | undefined) => {\r\n    if (lead_org && first_author) {\r\n      return Translate('StudyDetailsAuthorString', ['LeadOrg'], { 'FIRST_AUTHOR': first_author, 'LEAD_ORG': lead_org })\r\n    }\r\n    else if (first_author) {\r\n      return Translate('StudyDetailsAuthorString', ['NoLeadOrg'], { 'FIRST_AUTHOR': first_author })\r\n    }\r\n    return Translate('AuthorAndLeadOrganizationNotReported')\r\n  }\r\n\r\n  const getPublishString = (publish_date: string | undefined | null, publisher: string | null | undefined) => {\r\n    if (publish_date && publisher) {\r\n      return Translate('StudyDetailsPublishString', ['PublisherAndDate'], { 'PUBLISH_DATE': publish_date, 'PUBLISHER': publisher })\r\n    }\r\n    else if (publish_date) {\r\n      return Translate('StudyDetailsPublishString', ['NoPublisher'], { 'PUBLISH_DATE': publish_date })\r\n    }\r\n    else if (publisher) {\r\n      return Translate('StudyDetailsPublishString', ['NoPublishDate'], { 'PUBLISHER': publisher })\r\n    }\r\n    return null\r\n  }\r\n\r\n  const {\r\n    source_name, first_author, lead_org, publish_date, publisher, url,\r\n    summary, study_status, study_type,\r\n    population_group, age, city, state, country, sex,\r\n    seroprevalence, risk_of_bias, denominator,\r\n    sampling_method, sampling_end_date, sampling_start_date,\r\n    test_type, sensitivity, specificity, isotypes_reported, manufacturer, approving_regulator\r\n  } = props.record\r\n  return (\r\n    <Modal\r\n      centered={true}\r\n      size=\"large\"\r\n      closeOnEscape={true}\r\n      closeOnDimmerClick={true}\r\n      onClose={() => { setOpen(false) }}\r\n      open={open}\r\n      style={inlineStyle.modal}\r\n      trigger={\r\n        <Button onClick={() => setOpen(true)} style={{ padding: '8px' }}>\r\n          {Translate('Details')}\r\n        </Button>}>\r\n      <Modal.Header>{Translate('PrevalenceEstimateDetails')}\r\n        <FontAwesomeIcon onClick={() => setOpen(false)} icon={faTimes} size={\"sm\"} className=\"float-right cursor\" />\r\n      </Modal.Header>\r\n      <Modal.Content>\r\n        <Modal.Description>\r\n          <div className=\"col-12 p-0 flex\">\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Source').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 section-container modal-text-container\">\r\n                <Link to={url || \"\"} className=\"col-12 p-0 name-text\">\r\n                  {source_name}\r\n                </Link>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  {getAuthorString(first_author, lead_org)}\r\n                </div>\r\n                <div className=\"col-12 p-0 tertiary-text\">\r\n                  {getPublishString(publish_date, publisher)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Study').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('Summary')}: </span>\r\n                    {getPossibleNullString(summary)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('Status')}: </span>{getPossibleNullString(study_status)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('StudyType')}: </span>{getPossibleNullString(study_type)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Demographics').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('Population')}: </span>{getPossibleNullStringArray(population_group)}\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('AgeGroup')}: </span>{getPossibleNullStringArray(age)}\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span>\r\n                    <span className=\"secondary-title\">{Translate('Location')}: </span>{city ? `${city.join(\", \")}, ` : \"\"}{state ? `${state.join(\", \")}, ` : \"\"}{country ? country : \"\"}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col-6 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('Sex')}: </span>{getPossibleNullString(sex)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 pl-0 pr-2 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Prevalence').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('Estimate')}: </span>{seroprevalence ? (seroprevalence * 100).toFixed(2) : \"Not Reported\"}%\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('StudySize')}: </span>{getPossibleNullString(denominator)}\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <span className=\"secondary-title\">{Translate('RiskOfBias')}: </span>{getPossibleNullString(risk_of_bias)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6 pl-2 pr-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('Sampling').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('SamplingMethod')}: </span>{getPossibleNullString(sampling_method)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('StartDate')}: </span>{getPossibleNullString(sampling_start_date)}\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 p-0 secondary-text\">\r\n                  <div>\r\n                    <span className=\"secondary-title\">{Translate('EndDate')}: </span>{getPossibleNullString(sampling_end_date)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12 px-0 py-1\">\r\n              <div className=\"col-12 p-0 section-title\">{Translate('TestDetails').toUpperCase()}</div>\r\n              <div className=\"col-12 px-2 py-1 flex section-container modal-text-container\">\r\n                <div className=\"col-6 p-0\">\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Manufacturer')}: </span>{getPossibleNullString(manufacturer)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('TestUsed')}: </span>{getPossibleNullStringArray(test_type)}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Isotypes')}: </span>{getPossibleNullStringArray(isotypes_reported)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6 p-0\">\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Specificity')}: </span>{specificity ? `${(specificity * 100).toFixed(2)}%` : \"Not Reported\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-12 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('Sensitivity')}: </span>{sensitivity ? `${(sensitivity * 100).toFixed(2)}%` : \"Not Reported\"}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-126 p-0 secondary-text\">\r\n                    <div>\r\n                      <span className=\"secondary-title\">{Translate('RegulatoryApproval')}: </span>{getPossibleNullString(approving_regulator)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n    </Modal >\r\n  )\r\n} ","import _ from 'lodash';\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Dropdown, DropdownProps, Pagination, Table } from \"semantic-ui-react\";\r\nimport { AppContext } from \"../../context\";\r\nimport './Charts.css';\r\nimport StudyDetailsModal from './StudyDetailsModal';\r\nimport { mobileDeviceWidth } from '../../constants';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { AirtableRecord } from '../../types';\r\nimport Translate from '../../utils/translate/translateService';\r\n\r\nexport default function ReferencesTable() {\r\n  const [state] = useContext(AppContext);\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [boundaryRange] = useState(1);\r\n  const [siblingRange] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(10);\r\n  const [pageLength, setPageLength] = useState(5);\r\n  const [column, setColumn] = useState('denominator');\r\n  const [direction, setDirection] = useState('descending');\r\n  const initialDataState: AirtableRecord[] = [];\r\n  const [data, setData] = useState(initialDataState);\r\n\r\n  const handlePaginationChange = (e: any, event: any) => {\r\n    const { activePage } = event;\r\n    setActivePage(activePage)\r\n  }\r\n\r\n  const handlePageLengthChange = (e: any, event: DropdownProps) => {\r\n    setPageLength(event.value as number);\r\n    setActivePage(1);\r\n  }\r\n\r\n  const pageLengthOptions = [\r\n    { text: 5, value: 5 }, { text: 10, value: 10 }, { text: 25, value: 25 }, { text: 50, value: 50 }, { text: 100, value: 100 }\r\n  ]\r\n\r\n  const handleSort = (clickedColumn: string) => () => {\r\n    if (column !== clickedColumn) {\r\n\r\n      setActivePage(1);\r\n      setColumn(clickedColumn);\r\n      setDirection('ascending');\r\n      return\r\n    }\r\n    else {\r\n      setDirection(direction === 'ascending' ? 'descending' : 'ascending');\r\n    }\r\n  }\r\n  \r\n  const isMobileDevice = useMediaQuery({ maxWidth: mobileDeviceWidth })\r\n\r\n  useEffect(() => {\r\n    let newData = [];\r\n\r\n    if (direction === 'descending') {\r\n      newData = _.orderBy(state.filtered_records, [(o: any) => { return o[column] || '' }], ['desc']);\r\n    }\r\n    else {\r\n      newData =  _.orderBy(state.filtered_records, [column], ['asc']);\r\n    }\r\n\r\n    const splicedData = newData.splice((activePage - 1) * pageLength, pageLength);\r\n    setData(splicedData);\r\n\r\n    if (isMobileDevice) {\r\n      setPageLength(Math.ceil(state.filtered_records.length))\r\n    }\r\n    else {\r\n      setTotalPages(Math.ceil(state.filtered_records.length / pageLength));\r\n    }\r\n  }, [activePage, column, direction, isMobileDevice, pageLength, state.filtered_records])\r\n\r\n  const buildHeaderCell = (sortColumn: string, displayName: string, className: string) => {\r\n    return (\r\n      <Table.HeaderCell\r\n        className={className}\r\n        sorted={column === sortColumn ? direction as any : null}\r\n        onClick={handleSort(sortColumn)}\r\n      >\r\n        {displayName}\r\n      </Table.HeaderCell>)\r\n\r\n  }\r\n\r\n  const getPopulation = (sex: string | null, age: string[] | null, population_group: string[] | null) => {\r\n    if (!population_group) {\r\n      return \"Not Reported\";\r\n    }\r\n    const displaySex = sex && sex !== \"All\" && sex !== \"Unspecified\";\r\n    const displayAge = age && age[0] !== \"All\" && age[0] !== \"Unspecified\";\r\n    return `${displaySex ? `${sex}, ` : \"\"}${displayAge ? `${(age as string[]).join(\", \")}, ` : \"\"}${population_group.join(\", \")}`;\r\n  }\r\n\r\n  const getGeography = (city: string[] | null | undefined, state: string[] | null | undefined, country: string | null) => {\r\n    if (!country) {\r\n      return \"Not Reported\";\r\n    }\r\n    return `${city ? `${city.join(\", \")}, ` : \"\"}${state ? `${state.join(\", \")}, ` : \"\"}${country}`;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container col-11 mt-3 top references\">\r\n      <div className=\"col-12 px-0 py-3 section-title\">\r\n        {Translate('References').toUpperCase()}\r\n      </div>\r\n      <Table celled sortable fixed striped className=\"table mb-3 mt-0\">\r\n        <Table.Header className=\"flex col-12 p-0\">\r\n          <Table.Row className=\"flex col-12 p-0\">\r\n            {buildHeaderCell('title', Translate('Name'), 'col-sm-12 col-lg-3 p-1')}\r\n            {buildHeaderCell('country', Translate('Geography'), 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('populations', Translate('Populations'), 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('denominator', Translate('N'), 'col-sm-12 col-lg-1 p-1')}\r\n            {buildHeaderCell('seroprevalence', Translate('Prevalence'), 'col-sm-12 col-lg-1 p-1')}\r\n            {buildHeaderCell('risk_of_bias', Translate('RiskOfBias'), 'col-sm-12 col-lg-2 p-1')}\r\n            {buildHeaderCell('', Translate('Details'), 'col-sm-12 col-lg-1 p-1')}\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body className=\"col-12 p-0\">\r\n          {_.map(data,\r\n            (record) => {\r\n              const {\r\n                source_name, source_type, url,\r\n                country, state, city,\r\n                denominator,\r\n                sex, age, population_group,\r\n                seroprevalence,\r\n                risk_of_bias,\r\n              } = record\r\n              return (\r\n                <Table.Row className=\"flex col-12 p-0\" key={Math.random()}>\r\n                  <Table.Cell className=\" col-sm-12 col-lg-3 p-1\">\r\n                    <a href={url ? url : '#'} target=\"_blank\" rel=\"noopener noreferrer\">{source_name}</a>\r\n                    <i className=\"px-1\">({source_type})</i>\r\n                  </Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{getGeography(city, state, country)}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{getPopulation(sex, age, population_group)}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-1\">{denominator ? denominator : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-1\">{seroprevalence ? `${(seroprevalence * 100).toFixed(2)}%` : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-2 p-1\">{risk_of_bias ? risk_of_bias : \"Not Reported\"}</Table.Cell>\r\n                  <Table.Cell className=\"flex col-sm-12 col-lg-1 p-0 center-item\"><StudyDetailsModal record={record} /></Table.Cell>\r\n                </Table.Row>\r\n              )\r\n            })}\r\n        </Table.Body>\r\n        {\r\n          !isMobileDevice ?\r\n            <Table.Footer className=\"flex space-between\">\r\n              <Pagination\r\n                activePage={activePage}\r\n                boundaryRange={boundaryRange}\r\n                onPageChange={handlePaginationChange}\r\n                size='mini'\r\n                siblingRange={siblingRange}\r\n                totalPages={totalPages}\r\n              />\r\n              <div className=\"p-2 flex\">\r\n                <Dropdown inline\r\n                  options={pageLengthOptions}\r\n                  defaultValue={pageLengthOptions[0].value}\r\n                  onChange={handlePageLengthChange} />\r\n                <div className=\"px-2\">\r\n                  {Translate('StudiesPerPage')}\r\n              </div>\r\n              </div>\r\n            </Table.Footer> :\r\n            null\r\n        }\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\nimport React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Bar, BarChart, CartesianGrid, ErrorBar, LabelList, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Dropdown, DropdownProps } from \"semantic-ui-react\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\nimport { AppContext } from \"../../context\";\r\nimport { getAggregateData } from \"../../metaAnalysis\";\r\nimport { AggregationFactor } from \"../../types\";\r\nimport InformationIcon from \"../shared/InformationIcon\";\r\nimport './Charts.css';\r\nimport ReferencesTable from \"./ReferencesTable\";\r\nimport Translate from \"../../utils/translate/translateService\";\r\n\r\nexport default function Charts() {\r\n  const [yAxisSelection, setYAxis] = useState(AggregationFactor.country);\r\n  const [state] = useContext(AppContext);\r\n  const { filtered_records } = state;\r\n  const aggregatedRecords = getAggregateData(filtered_records, yAxisSelection);\r\n  const [records, setRecords] = useState(aggregatedRecords);\r\n\r\n  const yAxisOptions = [\r\n    { key: 'Geographies',       text: Translate('Geographies'),      value: AggregationFactor.country },\r\n    { key: 'Population',        text: Translate('Population'),       value: AggregationFactor.population_group },\r\n    { key: 'Sex',               text: Translate('Sex'),              value: AggregationFactor.sex },\r\n    { key: 'Age',               text: Translate('Age'),              value: AggregationFactor.age },\r\n    { key: 'Study Status',      text: Translate('StudyStatus'),      value: AggregationFactor.study_status },\r\n    { key: 'Test Type',         text: Translate('TestType'),         value: AggregationFactor.test_type },\r\n    { key: 'Source Type',       text: Translate('SourceType'),       value: AggregationFactor.source_type },\r\n    { key: 'Risk Of Bias',      text: Translate('RiskOfBias'),       value: AggregationFactor.risk_of_bias },\r\n    { key: 'Isotypes Reported', text: Translate('IsotypesReported'), value: AggregationFactor.isotypes_reported },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    const reAggregatedRecords = getAggregateData(filtered_records, yAxisSelection);\r\n    const chartData = _.sortBy(reAggregatedRecords, 'seroprevalence').reverse();\r\n    setRecords(chartData);\r\n  }, [yAxisSelection, state, filtered_records])\r\n\r\n  const handleChange = (event: SyntheticEvent<HTMLElement, Event>, data: DropdownProps) => {\r\n    setYAxis(data.value as AggregationFactor);\r\n  }\r\n\r\n  const CustomTooltip = (e: any) => {\r\n    const { active, payload, label } = e\r\n    if (active && payload) {\r\n      const seroprevalence = payload[0].value;\r\n      const recordError = records.find(o => o.name === label)?.error || [0, 0];\r\n      return (\r\n        <div className=\"col flex popup\">\r\n          <div className=\"col-12 p-0 popup-header\">{label}</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"Seroprevalence\")}: {seroprevalence.toFixed(2)}%</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"95%ConfidenceInterval\")}:  {(seroprevalence - recordError[0]).toFixed(2)}%-{(seroprevalence + recordError[1]).toFixed(2)}%</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate('TotalTests')}: {payload[0].payload.n}</div>\r\n          <div className=\"col-12 p-0 popup-content\">{Translate('TotalEstimates')}: {payload[0].payload.num_studies}</div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n\r\n  const renderCustomizedLabel = (props: any) => {\r\n    const { x, y, width, height, value, index } = props;\r\n    let recordError = records[index].error;\r\n    const ratio = width / value;\r\n    const error = Array.isArray(recordError) ? recordError[1] : recordError;\r\n    const errorBarWidth = ratio * error;\r\n    return (\r\n      <g>\r\n        <text x={x + width + 10 + (errorBarWidth as number)} y={y + height / 2 + 5} fill=\"#000\" textAnchor=\"right\" dominantBaseline=\"right\">\r\n          {value.toFixed(2)}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  const getYAxisWidth = (chartData: Record<string, string | number | number[]>[]) => {\r\n    let longestWord = 0;\r\n    chartData.filter(o => o.name)\r\n      .forEach(o => {\r\n        const country = o.name as string;\r\n        longestWord = country.length > longestWord ? country.length : longestWord;\r\n      })\r\n    return longestWord;\r\n  }\r\n\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxWidth: mobileDeviceOrTabletWidth })\r\n\r\n  return (\r\n    <div className=\"charts-page\">\r\n      <div className={isMobileDeviceOrTablet ? \"mobile-charts container col-11 center-item flex\" : \"charts container col-11 center-item flex\"}>\r\n        <div className=\"col-12 p-0 flex\">\r\n          <div className=\"col-sm-1 col-lg-3\">\r\n          </div>\r\n          <div className=\"charts-title flex p-0 mt-2 p-lg-0 col-sm-8 col-lg-6\">\r\n            <div className=\"col-auto flex center-item\">\r\n              {Translate('SeroprevalenceBy')}\r\n            </div>\r\n            <Dropdown\r\n              placeholder={Translate('Geographies')}\r\n              fluid selection\r\n              className=\"col large-dropdown\"\r\n              onChange={handleChange}\r\n              options={yAxisOptions}\r\n            >\r\n            </Dropdown>\r\n          </div>\r\n          <div className=\"col-sm-6 col-lg-3 flex top right\">\r\n            95% CI\r\n            <InformationIcon\r\n            offset=\"10px\"\r\n            position=\"bottom right\"\r\n            color=\"#455a64\"\r\n            size=\"sm\"\r\n            tooltip={Translate(\"95%ConfidenceIntervalTooltip\")}\r\n            tooltipHeader={Translate(\"95%ConfidenceInterval\")}/>\r\n          </div>\r\n        </div>\r\n        <ResponsiveContainer width=\"100%\" height=\"80%\">\r\n          <BarChart data={records} layout='vertical' barGap={10}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis type=\"number\" name={`${Translate(\"Seroprevalence\")} (%)`} padding={{ left: 0, right: 30 }} />\r\n            <YAxis dataKey=\"name\" type=\"category\" interval={0} width={getYAxisWidth(records) * 7} />\r\n            <Tooltip content={<CustomTooltip />} />\r\n            <Legend />\r\n            <Bar dataKey=\"seroprevalence\" name={`${Translate('Seroprevalence')} (%)`} fill=\"#55A6BA\" maxBarSize={60} barSize={20}>\r\n              <LabelList dataKey=\"seroprevalence\" position=\"right\" content={renderCustomizedLabel} />\r\n              <ErrorBar dataKey=\"error\" width={4} strokeWidth={2} />\r\n            </Bar>\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      <ReferencesTable />\r\n    </div>\r\n  );\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport const toPascalCase = (str: string) => _.upperFirst(_.camelCase(str));","\r\nimport * as Countries from 'i18n-iso-countries';\r\nimport English from \"i18n-iso-countries/langs/en.json\"\r\nimport French from \"i18n-iso-countries/langs/fr.json\"\r\nimport { LanguageType } from \"../types\";\r\nimport { toPascalCase } from './translate/caseChanger';\r\nimport Translate from './translate/translateService';\r\n\r\nexport const getBuckets = (features: GeoJSON.Feature[]) => {\r\n  // This is some javascript voodoo to get maxSeroprevalence\r\n  const maxSeroprevalence = Math.max.apply(Math, features.filter(o => o.properties?.seroprevalence).map((o) => o?.properties?.seroprevalence));\r\n  const roundedMax = Math.ceil(maxSeroprevalence);\r\n  const maxLogit = getLogit(roundedMax);\r\n\r\n  // This is an arbitrary value that I chose because on the logit scale\r\n  // as you decrease in size you approach infinity, not 0\r\n  const lowerEnd = -7;\r\n  const differenceScale = maxLogit - lowerEnd\r\n  const bucketSegments = 6\r\n  const step = differenceScale / bucketSegments;\r\n  const buckets = [0];\r\n  for (let x = 1; x <= 6; x++) {\r\n    const logitStep = parseFloat(getDecimalFromLogit(-7 + step * x).toFixed(1));\r\n    buckets.push(logitStep);\r\n  }\r\n  return buckets;\r\n}\r\n\r\nconst getLogit = (percentage: number) => {\r\n  const decimal = percentage / 100;\r\n  return Math.log(decimal) - Math.log(1 - decimal);\r\n}\r\n\r\nconst getDecimalFromLogit = (logit: number) => {\r\n  return Math.exp(logit) / (Math.exp(logit) + 1) * 100\r\n}\r\n\r\n\r\nexport const getMapUrl = (language: LanguageType) => {\r\n  return language === LanguageType.english ? 'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token='\r\n    : 'https://api.mapbox.com/styles/v1/serotracker/ckb5pp5aj33xn1it8hivdofiv/tiles/512/{z}/{x}/{y}?access_token='\r\n}\r\n\r\nexport const colors = ['#76E57F', '#62CA7C', '#4FB079', '#3B9577', '#277A74', '#146071', '#00456E', \"#EEEEEE\"]\r\n\r\nexport const getColor = (d: number | null, buckets: number[]) => {\r\n  if (d === null) return colors[7];\r\n  \r\n  return d < buckets[1] ? colors[0] :\r\n    d < buckets[2] ? colors[1] :\r\n      d < buckets[3] ? colors[2] :\r\n        d < buckets[4] ? colors[3] :\r\n          d < buckets[5] ? colors[4] :\r\n            d < buckets[6] ? colors[5] :\r\n              colors[6]\r\n}\r\n\r\nCountries.registerLocale(English);\r\nCountries.registerLocale(French);\r\n\r\nexport const getCountryName = (country: string, language: LanguageType, optionString: string) => {\r\n  const code = Countries.getAlpha2Code(country, 'en');\r\n  console.log(code);\r\n  const translatedCountryName = Countries.getName(code, language);\r\n  const displayText = translatedCountryName ? translatedCountryName : Translate(optionString, [toPascalCase(country)]);\r\n  return displayText;\r\n}\r\n","import L from \"leaflet\";\r\nimport React, { useEffect } from \"react\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\r\nimport { getColor } from \"../../utils/mapUtils\";\r\nimport Translate from \"../../utils/translate/translateService\";\r\nimport \"./Legend.css\";\r\n\r\ninterface LegendProps {\r\n  buckets: number[]\r\n}\r\n\r\nexport default function Legend(props: LegendProps) {\r\n  const { map } = useLeaflet();\r\n  const { buckets } = props;\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxWidth: mobileDeviceOrTabletWidth })\r\n\r\n  const labels = buckets.map((value, index) => {\r\n    if (index !== buckets.length) {\r\n      const from = value;\r\n      const to = buckets[index + 1]\r\n      // TODO: Check into passing in an array of colours instead of the getColor function\r\n      return (\r\n        <div className=\"bin flex\" key={Math.random()}>\r\n          <div className={isMobileDeviceOrTablet ? \"col-12 mobile-text p-0\" : \"col-12 p-0\"}>\r\n            {isMobileDeviceOrTablet ? `${from}%${to ? '' : \"+\"}` : `${from}%${to ? `- ${to}%` : \"+\"}`}</div>\r\n          <i className=\"col-12 p-0\" style={{ background: getColor(from, buckets) }}></i>\r\n        </div>\r\n      )\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <div className={isMobileDeviceOrTablet ? \"info flex legend-mobile center-item\" : \"info flex legend center-item\"}>\r\n      {labels}\r\n      <h4 className=\"legend-title p-0 middle\">{Translate('Seroprevalence')}\r\n        <span className=\"flex popup\">\r\n          <div className=\"popup-header col-12 p-0 flex left\">{Translate(\"SeroprevalenceScale\")}</div>\r\n          <div className=\"popup-content col-12 p-0 flex start-item left\">{Translate(\"SeroprevalenceScaleTooltip\")}</div>\r\n        </span>\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n","import { latLngBounds, Layer, LeafletMouseEvent } from \"leaflet\";\nimport React, { createRef, useContext, useEffect, useState } from \"react\";\nimport ReactDOMServer from 'react-dom/server';\nimport { GeoJSON, Map as LeafletMap, TileLayer } from \"react-leaflet\";\nimport Countries from \"../../assets/countries-geo.json\";\nimport { AppContext } from \"../../context\";\nimport { getAggregateData } from \"../../metaAnalysis\";\nimport { AggregatedRecord, AggregationFactor } from \"../../types\";\nimport { getBuckets, getColor, getCountryName, getMapUrl } from \"../../utils/mapUtils\";\nimport Translate from \"../../utils/translate/translateService\";\nimport Legend from \"./Legend\";\nimport './Map.css';\n\nexport default function Map() {\n  const mapRef = createRef<LeafletMap>();\n  const geoJsonRef = createRef<GeoJSON>();\n  const [state] = useContext(AppContext);\n  const [mapRecords, setMapRecords] = useState(Countries as any);\n  const [forceUpdate, setForceUpdate] = useState(Math.random());\n  const buckets = getBuckets(mapRecords.features);\n\n  useEffect(() => {\n    const prevalenceCountryDict: Record<string, AggregatedRecord> = getAggregateData(state.filtered_records, AggregationFactor.country)\n      .reduce((a, x: AggregatedRecord) => ({ ...a, [x.name]: x }), {})\n\n    const importGeo = Countries as any;\n    const features = importGeo.features as GeoJSON.Feature[]\n\n    // We will iterate through all the features in the geoJson\n    // if they are in the country dict we will attach their aggregated data to the feature for displaying\n    importGeo.features = features.map(feature => {\n      const country = prevalenceCountryDict[feature?.properties?.name];\n      if (country && country.seroprevalence) {\n        const { seroprevalence, error, n, num_studies } = country;\n        return { ...feature, properties: { ...feature.properties, seroprevalence, error, n, num_studies } }\n      }\n      return { ...feature, properties: { ...feature.properties, seroprevalence: null, error: null, n: null, num_studies: null } }\n    })\n    setMapRecords(importGeo)\n\n    // we need to update the key on the GEOJSON to let react know it's time to rerender\n    setForceUpdate(Math.random())\n  }, [state.filtered_records, state.language])\n\n\n  const style = (feature: GeoJSON.Feature<GeoJSON.Geometry, any> | undefined) => {\n    return {\n      fillColor: getColor(feature?.properties?.seroprevalence, buckets),\n      weight: 1,\n      opacity: 1,\n      color: 'white',\n      dashArray: '0',\n      fillOpacity: 0.7,\n      zIndex: 650\n    }\n  }\n\n  const highlightFeature = (e: LeafletMouseEvent) => {\n    const layer = e.target;\n    layer.setStyle({\n      weight: 5,\n      color: '#666',\n      dashArray: '',\n      fillOpacity: 0.7,\n      zIndex: 200\n    });\n    layer.bringToFront();\n\n  }\n\n  const zoomToFeature = (e: LeafletMouseEvent) => {\n    const map = mapRef?.current?.leafletElement\n    map?.fitBounds(e.target.getBounds());\n  };\n\n  const resetHighlight = (e: LeafletMouseEvent) => {\n    const layer = e.target;\n\n    layer.setStyle({\n      weight: 2,\n      opacity: 1,\n      color: 'white',\n      dashArray: '',\n      fillOpacity: 0.7\n    });\n  };\n  const createPopup = (properties: any) => {\n    if (properties.seroprevalence) {\n      let error = properties?.error;\n      return (\n        <div className=\"col-12 p-0 flex\">\n          <div className=\"col-12 p-0 popup-header\">{getCountryName(properties.name, state.language, \"CountryOptions\")}</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"Seroprevalence\")}: {properties?.seroprevalence.toFixed(2)}%</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"95%ConfidenceInterval\")}: {(properties?.seroprevalence - error[0]).toFixed(2)}%-{(properties?.seroprevalence + error[1]).toFixed(2)}%</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate(\"TotalTests\")}: {properties?.n}</div>\n          <div className=\"col-12 p-0 popup-content\">{Translate('TotalEstimates')}: {properties?.num_studies}</div>\n        </div>)\n    };\n    return (\n      <div className=\"col-12 p-0 flex\">\n        <div className=\"col-12 p-0 popup-header\">{getCountryName(properties.name, state.language, \"CountryOptions\")}</div>\n        <div className=\"col-12 p-0 flex popup-content\">{Translate('NoData')}</div>\n      </div>)\n  }\n\n\n  // This method sets all the functionality for each GeoJSON item\n  const onEachFeature = (feature: GeoJSON.Feature, layer: Layer) => {\n\n    layer.bindPopup(ReactDOMServer.renderToString(createPopup(feature.properties)), { closeButton: false, autoPan: false });\n\n    layer.on({\n      mouseover: (e: LeafletMouseEvent) => {\n        layer.openPopup();\n        highlightFeature(e)\n      },\n      mouseout: (e: LeafletMouseEvent) => {\n        layer.closePopup();\n        resetHighlight(e)\n      },\n      mousemove: (e: LeafletMouseEvent) => {\n        layer.getPopup()?.setLatLng(e.latlng);\n      },\n      click: (e: LeafletMouseEvent) => {\n        zoomToFeature(e);\n      }\n    })\n  }\n\n  const bounds = latLngBounds([-90, -200], [90, 180]);\n  const maxBounds = latLngBounds([-90, -200], [90, 200]);\n\n  const mapboxAccessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n  return (\n    <LeafletMap\n      ref={mapRef}\n      center={[0, 0]}\n      zoom={2}\n      className=\"map w-100\"\n      bounceAtZoomLimits={true}\n      bounds={bounds}\n      minZoom={2}\n      maxBounds={maxBounds}\n      enableHighAccuracy={true}\n      maxBoundsViscosity={1}\n    >\n      <TileLayer\n        url={getMapUrl(state.language) + mapboxAccessToken}\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        tileSize={512}\n        id={'mapbox/light-v9'}\n        zoomOffset={-1}>\n      </TileLayer>\n      <GeoJSON\n        onEachFeature={onEachFeature}\n        ref={geoJsonRef}\n        key={forceUpdate}\n        data={mapRecords as GeoJSON.GeoJsonObject}\n        style={(data) => style(data)}>\n      </GeoJSON>\n      <Legend buckets={buckets} />\n    </LeafletMap>\n  );\n}\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport Charts from \"../../charts/Charts\";\r\nimport './Component.css';\r\nimport Map from '../../map/Map';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\n\r\nexport default function CentralPiece() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n\r\n  const getClass = (shouldHighlight: boolean) => {\r\n    if (shouldHighlight === state.data_page_state.mapOpen) {\r\n      return 'center-highlighted'\r\n    }\r\n    return 'center-regular'\r\n  }\r\n\r\n  const displayCenter = () => {\r\n    return state.data_page_state.mapOpen ? <Map /> : <Charts />\r\n  }\r\n  return (\r\n    <div className=\"flex fill\">\r\n      <div className=\"center-button flex\">\r\n        <div className={`center-item left-button ${getClass(true)}`} onClick={() =>\r\n          dispatch({\r\n            type: 'SELECT_DATA_TAB',\r\n            payload: true\r\n          })}>\r\n          {Translate('Explore')}\r\n          </div>\r\n        <div className={`right-button ${getClass(false)}`} onClick={() =>\r\n          dispatch({\r\n            type: 'SELECT_DATA_TAB',\r\n            payload: false\r\n          })}>\r\n          {Translate('Analyze')}\r\n          </div>\r\n      </div>\r\n      {displayCenter()}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { Dropdown } from 'semantic-ui-react'\r\nimport { FilterType } from '../../../types';\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport Translate from \"../../../utils/translate/translateService\";\r\nimport { toPascalCase } from \"../../../utils/translate/caseChanger\";\r\nimport { getCountryName } from \"../../../utils/mapUtils\";\r\n\r\nexport default function Filters() {\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  const formatOptions = (options: any, filter_type: FilterType) => {\r\n    const formatted_options: Record<string, string>[] = [];\r\n    const optionString = toPascalCase(filter_type.toString());\r\n    const jsonObjectString = `${optionString}Options`;\r\n    switch (filter_type) {\r\n      case 'country':\r\n        options.forEach((o: string) => {\r\n          formatted_options.push({\r\n            key: o,\r\n            text: getCountryName(o, state.language, jsonObjectString),\r\n            value: o\r\n          })\r\n        });\r\n        break;\r\n      default:\r\n        options.forEach((o: string) => {\r\n          const translatedString = Translate(jsonObjectString, [toPascalCase(o)]);\r\n          const alternativeString = Translate(jsonObjectString, [o.replace(/ /g, '')]);\r\n\r\n          formatted_options.push({\r\n            key: o,\r\n            text: translatedString ? translatedString : alternativeString,\r\n            value: o\r\n          })\r\n        });\r\n    };\r\n    return formatted_options;\r\n  }\r\n\r\n  const addFilter = (data: any, filter_type: string) => {\r\n    dispatch({\r\n      type: 'UPDATE_FILTER',\r\n      payload: {\r\n        filter_type,\r\n        filter_value: data.value\r\n      }\r\n    });\r\n  }\r\n\r\n  const buildSectionHeader = (header_text: string, tooltip_text?: string | React.ReactNode, tooltip_header?: string) => {\r\n    return (\r\n      <div className=\"pb-2 flex\">\r\n        <div className=\"filter-section-header\">{header_text}</div>\r\n        {tooltip_text && (\r\n          <div className=\"tooltip-vert-adj\">\r\n            <InformationIcon\r\n              offset={10}\r\n              position=\"bottom right\"\r\n              color=\"#455a64\"\r\n              tooltipHeader={tooltip_header ? tooltip_header : header_text}\r\n              popupSize=\"small\"\r\n              size=\"sm\"\r\n              tooltip={tooltip_text} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const buildFilterDropdown = (filter_type: FilterType, placeholder: string) => {\r\n    return (\r\n      <div className=\"pb-3\">\r\n        <Dropdown\r\n          text={placeholder}\r\n          fluid\r\n          multiple\r\n          search\r\n          clearable\r\n          selection\r\n          options={formatOptions(state.filter_options[filter_type], filter_type)}\r\n          onChange={(e: any, data: any) => { addFilter(data, filter_type) }}\r\n          defaultValue={Array.from(state.filters[filter_type])}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0\">\r\n      <div className=\"py-3 center flex\">\r\n        <div className=\"section-title\">\r\n          {Translate(\"Filter\").toUpperCase()}\r\n        </div>\r\n        <div className=\"tooltip-vert-adj\">\r\n          <InformationIcon\r\n            offset={10}\r\n            position=\"bottom right\"\r\n            color=\"#455a64\"\r\n            tooltipHeader={Translate(\"Filter\")}\r\n            popupSize=\"small\"\r\n            size=\"sm\"\r\n            tooltip={Translate('FilterTooltip')} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-10 col align-items-center p-0\">\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader(Translate('Geography'), Translate('GeographyTooltip'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('country', Translate('Country'))}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {\r\n                buildSectionHeader(Translate('StudyInformation'),\r\n                  <div>\r\n                    <p>\r\n                      {Translate('StudyInformationTooltip', ['FirstParagraph'])}\r\n                    </p>\r\n                    <p>\r\n\r\n                      {Translate('StudyInformationTooltip', ['SecondParagraph'])}\r\n                    </p>\r\n                  </div>)\r\n              }\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('source_type', Translate('SourceType'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('study_status', Translate('StudyStatus'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('risk_of_bias', Translate('OverallRiskOfBias'))}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader(Translate('Demographics'), Translate('DemographicsTooltip'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('population_group', Translate('PopulationGroup'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('sex', Translate('Sex'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('age', Translate('Age'))}\r\n            </div>\r\n          </div>\r\n          <div className=\"pb-1\">\r\n            <div>\r\n              {buildSectionHeader(Translate('TestInformation'), Translate('TestInformationTooltip'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('test_type', Translate('TestType'))}\r\n            </div>\r\n            <div>\r\n              {buildFilterDropdown('isotypes_reported', Translate('IsotypesReported'))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { aggregateRecords } from \"../../../metaAnalysis\";\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport { MIN_DENOMINATOR } from \"../../../metaAnalysis\"\r\nimport './TotalStats.css';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\n\r\n\r\nexport default function TotalStats() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  const { seroprevalence, n } = aggregateRecords(state.filtered_records);\r\n  function onlyUnique(value: any, index: number, self: any) {\r\n    return self.indexOf(value) === index && value !== null;\r\n  }\r\n  const countryDict = state.filtered_records\r\n    .map(o => {\r\n      if (o.seroprevalence !== null && o.denominator !== null) {\r\n        return o.country\r\n      }\r\n      return null;\r\n    })\r\n    .filter(onlyUnique);\r\n  const countries = countryDict.length;\r\n\r\n  //TODO: Extract to utils\r\n  const countriesOrCountry = () => {\r\n    return Translate(countries > 1 && countries !== 0 ? \"Countries\" : \"Country\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-12 p-0 stats-container\">\r\n      <div className=\"col-12 py-3 section-title center\">{Translate('SummaryStatistics').toUpperCase()}</div>\r\n      <div className=\"col-12 p-0 flex\">\r\n        <div className=\"main-statistic-title col-12 p-0 center-item flex\">\r\n          {Translate('Seroprevalence')}\r\n          <InformationIcon\r\n            color=\"#468ac1\"\r\n            offset={-12}\r\n            tooltip={\r\n              <div>\r\n                <p>\r\n                  {Translate(\"SeroprevalenceTooltip\", ['FirstParagraph'])}\r\n                </p>\r\n                <p>\r\n                  {Translate(\"SeroprevalenceTooltip\", ['SecondParagraph'])}\r\n                </p>\r\n                <p>\r\n                  {Translate(\"SeroprevalenceTooltip\", ['ThirdParagraph'], { \"MIN_DENOMINATOR\": MIN_DENOMINATOR })}\r\n                </p>\r\n              </div>\r\n            }\r\n            size=\"xs\"\r\n            tooltipHeader={Translate(\"AggregatedPrevalence\")} /></div>\r\n        <div className=\"main-statistic col-12 p-0 center\">{seroprevalence ? `${seroprevalence.toFixed(2)}%` : Translate(\"NoData\")}</div>\r\n      </div>\r\n      <div className=\"col-12 flex middle py-2\">\r\n        <div className=\"secondary-statistic-title center p-0 col-12\">{Translate(\"TestsAdministered\")}</div>\r\n        <div className=\"secondary-statistic col-12 p-0 center\">{n}</div>\r\n      </div>\r\n      <div className=\"col-12 flex middle py-2\">\r\n        <div className=\"secondary-statistic px-1 center\">{countries}</div>\r\n        <div className=\"secondary-statistic-title px-1 center\">{countriesOrCountry()}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import _ from \"lodash\";\r\nimport React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport { getAggregateData } from \"../../../metaAnalysis\";\r\nimport { AggregationFactor } from \"../../../types\";\r\nimport './CountryList.css';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\n\r\nexport default function CountryList() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  const aggregatedData = _.sortBy(getAggregateData(state.filtered_records, AggregationFactor.country), ['seroprevalence']).reverse();\r\n\r\n  return (\r\n    <div className=\"country-list\">\r\n      <div className=\"section-title py-2 center\">\r\n        {Translate('SeroPrevalenceByCountry').toUpperCase()}\r\n      </div>\r\n      <div className=\"list\">\r\n          {aggregatedData.map(o => {\r\n            return (\r\n              <div className=\"flex item-container\" key={Math.random()}>\r\n                <div className=\"p-2 country-name center-item\">\r\n                  {o.name}\r\n                </div>\r\n                <div className=\"p-2 country-stat center-item\">\r\n                  {(o.seroprevalence as Number).toFixed(2)}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from \"react\";\r\n// import { AppContext } from \"../../../context\";\r\nimport { Sidebar, Segment, Menu } from \"semantic-ui-react\";\r\nimport Filters from \"../sidebar/right-sidebar/Filters\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faFilter, faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport TotalStats from \"../sidebar/left-sidebar/TotalStats\";\r\nimport CountryList from \"../sidebar/left-sidebar/CountryList\";\r\nimport CentralPiece from \"../pages/Dashboard/CenterComponent\";\r\n\r\n\r\nexport default function MobileComponents() {\r\n  const [showMobileFilters, setShowFilters] = useState(false);\r\n  const [showSummary, setShowSummary] = useState(false);\r\n\r\n  const handleFilterToggle = (showMobile: boolean, showSummary: boolean) => {\r\n    setShowFilters(showMobile);\r\n    setShowSummary(showSummary);\r\n  }\r\n\r\n  return (\r\n    <div className=\"fill flex\"> \r\n    <Sidebar.Pushable as={Segment} className=\"fill flex\">\r\n      {/* Filters */}\r\n      <Sidebar\r\n        as={Menu}\r\n        animation='overlay'\r\n        icon='labeled'\r\n        className=\"col-10 p-0\"\r\n        vertical\r\n        direction=\"left\"\r\n        visible={showMobileFilters}\r\n        width='wide'\r\n      >\r\n\r\n        <Filters />\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={() => handleFilterToggle(false, false)}\r\n          className={'icon'}\r\n          color={'#455a64'}\r\n          style={{ fontWeight: 300, position: 'absolute', zIndex: 3000, top: 10, right: 20 }}\r\n          size={\"lg\"} />\r\n      </Sidebar>\r\n      {/* Left Sidebar */}\r\n      <Sidebar\r\n        as={Menu}\r\n        animation='overlay'\r\n        icon='labeled'\r\n        className=\"col-10 p-0\"\r\n        vertical\r\n        direction=\"left\"\r\n        visible={showSummary}\r\n        width='wide'\r\n      >\r\n        <TotalStats />\r\n        <CountryList />\r\n        <FontAwesomeIcon\r\n          icon={faTimes}\r\n          onClick={() => handleFilterToggle(false, false)}\r\n          className={'icon'}\r\n          color={'#455a64'}\r\n          style={{ fontWeight: 300, position: 'absolute', zIndex: 3000, top: 10, right: 20 }}\r\n          size={\"lg\"} />\r\n      </Sidebar>\r\n      <Sidebar.Pusher className=\"fill flex\">\r\n        <CentralPiece />\r\n        {/* Icons */}\r\n        <div className=\"icon-container\"\r\n          style={{ top: 10, right: 15 }}>\r\n          <FontAwesomeIcon\r\n            icon={faFilter}\r\n            onClick={() => handleFilterToggle(!showMobileFilters, false)}\r\n            className={'icon'}\r\n            color={'#455a64'}\r\n            size={\"2x\"} />\r\n        </div>\r\n        <div className=\"icon-container\"\r\n          style={{ top: 10, right: 58 }}>\r\n          <FontAwesomeIcon\r\n            icon={faBars}\r\n            onClick={() => handleFilterToggle(false, !showSummary)}\r\n            className={'icon'}\r\n            color={'#455a64'}\r\n            size={\"2x\"} />\r\n        </div>\r\n      </Sidebar.Pusher>\r\n    </Sidebar.Pushable>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport CountryList from \"./CountryList\";\r\nimport TotalStats from \"./TotalStats\";\r\nimport \"../sidebar.css\"\r\n\r\nexport default function LeftSidebar() {\r\n  return (\r\n    <div className=\"sidebar-container flex\">\r\n      <TotalStats/>\r\n      <CountryList/>\r\n    </div>\r\n  )\r\n}","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../../context\";\r\nimport InformationIcon from \"../../shared/InformationIcon\";\r\nimport './RightSidebar.css';\r\nimport Translate from \"../../../utils/translate/translateService\";\r\n\r\nexport default function LastUpdated() {\r\n  const [state] = useContext(AppContext);\r\n\r\n  return (\r\n    <div className=\"col-12 pb-4\">\r\n      <div className='col-12 p-0 center-item flex'>\r\n        <div className=\"section-title\">\r\n        {Translate(\"LastUpdated\").toUpperCase()}\r\n        </div>\r\n        <div className=\"tooltip-vert-adj\">\r\n          <InformationIcon\r\n              offset={10}\r\n              position=\"top right\"\r\n              color=\"#455a64\"\r\n              tooltipHeader={Translate(\"LastUpdated\")}\r\n              popupSize=\"small\"\r\n              size=\"sm\"\r\n              tooltip={Translate(\"LastUpdatedTooltip\")}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"py-2 center\">\r\n        {state.updated_at}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport LastUpdated from \"./LastUpdated\";\r\nimport \"../sidebar.css\"\r\nimport \"./RightSidebar.css\"\r\n\r\nexport default function RightSidebar() {\r\n  return (\r\n    <div className=\"justify-content-between sidebar-container\">\r\n      <div className=\"filters-container mb-3\">\r\n        <Filters/>\r\n      </div>\r\n      <div>\r\n        <LastUpdated/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { mobileDeviceOrTabletWidth } from \"../../../constants\";\r\nimport CentralPiece from \"./CenterComponent\";\r\nimport MobileComponents from '../../mobile/MobileComponents';\r\nimport LeftSidebar from \"../../sidebar/left-sidebar/LeftSidebar\";\r\nimport RightSidebar from \"../../sidebar/right-sidebar/RightSidebar\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nexport default function Dashboard() {\r\n\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\r\n  return (\r\n    <div className=\"fill flex dashboard\">\r\n      {!isMobileDeviceOrTablet ?\r\n        (<div className=\"fill flex\">\r\n          <div className=\"col-2 p-0 flex\">\r\n            <LeftSidebar />\r\n          </div>\r\n          <div className=\"col-8 p-0 flex\">\r\n            <CentralPiece />\r\n          </div>\r\n          <div className=\"col-2 p-0 flex\">\r\n            <RightSidebar />\r\n          </div>\r\n        </div>) :\r\n        (\r\n          <div className=\"fill flex\">\r\n            <MobileComponents />\r\n          </div>\r\n        )}\r\n    </div >\r\n  )\r\n}","import React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport './static.css';\nimport { useMediaQuery } from \"react-responsive\";\nimport { mobileDeviceOrTabletWidth } from \"../../constants\";\nimport Translate from \"../../utils/translate/translateService\";\n\nexport default function Data() {\n    const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\n    const renderPane = (src: string) => {\n        return <Tab.Pane className=\"col-12 p-0\">\n            <iframe\n                title=\"airtable-embed\"\n                className=\"airtable-embed col-12 p-0\"\n                src={src}\n                width=\"85%\"\n                height=\"650\"\n            /></Tab.Pane>\n    }\n\n    const panes = [{\n        menuItem: isMobileDeviceOrTablet ? Translate('Serosurveys') : Translate('SerosurveysReportingPrevalence'),\n        render: () => renderPane('https://airtable.com/embed/shraXWPJ9Yu7ybowM?backgroundColor=blue&viewControls=on')\n    },\n    {\n        menuItem: Translate('PlannedSerosurveys'),\n        render: () => renderPane('https://airtable.com/embed/shr85cDHzwETbjgdu?backgroundColor=blue&viewControls=on')\n    }];\n\n    return (\n        <div className=\"col-12 page\">\n            <div className={isMobileDeviceOrTablet ? \"pb-2\" : \"static-content pb-2\"}>\n                <h1>\n                    {Translate('Methods')}\n                </h1>\n                <p>\n                    {Translate('MethodsText', ['FirstParagraph'])}\n                </p>\n                <p>\n                    {Translate('MethodsText', ['SecondParagraphPartOne'])} <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.google.com/document/d/1NYpszkr-u__aZspFDFa_fa4VBzjAAAAxNxM1rZ1txWU/edit?usp=sharing\">{Translate('Here').toLocaleLowerCase()}.</a> {Translate('MethodsText', ['SecondParagraphPartTwo'])} <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://forms.gle/XWHQ7QPjQnzQMXSz8\">{Translate('ThisForm').toLowerCase()}</a>.\n                </p>\n                <h1>\n                    {Translate('Paper')}\n                </h1>\n                <p>\n                    {Translate('PaperText', null, null, [false, true])}<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.medrxiv.org/content/10.1101/2020.05.10.20097451v1\">medRxiv</a>.\n                </p>\n                <h1>\n                    {Translate('OurData')}\n                </h1>\n                <p>\n                    {Translate('OurDataText', ['Text'])}\n                </p>\n                <ul>\n                    <li>\n                        <p>\n                            <b>{Translate('SerosurveysReportingPrevalence')}</b>{Translate('OurDataText', ['PointOne'], null, [true, false])}\n                        </p>\n                    </li>\n                    <li>\n                        <p>\n                            <b>{Translate('PlannedSerosurveys')}</b>{Translate('OurDataText', ['PointTwo'], null, [true, false])}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n            <Tab className=\"col-10 p-0 airtable-embed vertical-spacer\" panes={panes} />\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGlobeAmericas, faFileAlt, faUsers, faCog } from '@fortawesome/free-solid-svg-icons'\r\nimport { Dropdown, DropdownProps } from 'semantic-ui-react'\r\nimport LanguageSelector from '../sidebar/right-sidebar/LanguageSelector'\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { mobileDeviceOrTabletWidth } from '../../constants'\r\nimport MultiColorIcon from '../../assets/images/colored-icon.svg';\r\nimport Translate from '../../utils/translate/translateService'\r\nimport { Settings } from './Settings'\r\n\r\n\r\nexport const NavBar = () => {\r\n  const [tab, setTab] = useState(\"\");\r\n\r\n  const getTabClass = (tabName: string) => {\r\n    return tabName === tab ? 'bold col-auto h-100 flex center-item' : 'regular col-auto h-100 flex center-item';\r\n  }\r\n\r\n  const usePageViews = () => {\r\n    let location = useLocation();\r\n    useEffect(() => {\r\n      setTab(location.pathname)\r\n    }, [location]);\r\n  }\r\n\r\n  usePageViews()\r\n  const isMobileDeviceOrTablet = useMediaQuery({ maxDeviceWidth: mobileDeviceOrTabletWidth })\r\n  return (\r\n    <header className=\"App-header col-12 px-sm-2\">\r\n      <div className=\"App-title col-auto py-3 px-0 flex left\">\r\n        <Link to=\"/\" className=\"flex\">\r\n          <img src={MultiColorIcon} width={23} height={23} alt=\"\" />\r\n          <div className=\"col-auto px-2\" >SeroTracker</div>\r\n        </Link>\r\n      </div>\r\n      <div className=\"App-tabs h-100 p-0 col-auto space-evenly\">\r\n        <div className={getTabClass('/Dashboard')}>\r\n          <Link to=\"/Dashboard\">\r\n            {isMobileDeviceOrTablet ?\r\n              <FontAwesomeIcon icon={faGlobeAmericas} size=\"lg\" /> :\r\n              Translate('Dashboard')}\r\n          </Link>\r\n        </div>\r\n        <div className={getTabClass('/Data')}>\r\n          <Link to=\"/Data\">\r\n            {isMobileDeviceOrTablet ?\r\n              <FontAwesomeIcon icon={faFileAlt} size=\"lg\" /> :\r\n              Translate('Data')}\r\n          </Link>\r\n        </div>\r\n        <div className={getTabClass('/About')}>\r\n          <Link to=\"/About\">\r\n            {isMobileDeviceOrTablet ?\r\n              <FontAwesomeIcon icon={faUsers} size=\"lg\" /> :\r\n              Translate('About')}\r\n          </Link>\r\n        </div>\r\n        {/* <div className={getTabClass('')}>\r\n          <Settings />\r\n        </div> */}\r\n      </div>\r\n    </header >\r\n  )\r\n}","import { AirtableRecord } from \"./types\"\n\nexport default class httpClient {\n    async httpGet(url: string){\n        let url_full = url;\n        if(process.env.REACT_APP_ROUTE){\n            url_full = process.env.REACT_APP_ROUTE + url_full;\n        }\n        const res = await fetch(url_full);\n        if(res.status !== 200) {\n            return;\n        }\n        else {\n            const response_json = await res.json();\n            return response_json;\n        }\n    }\n\n    async getHealthcheck() {\n        const healthcheck: string = await this.httpGet('/healthcheck');\n        return healthcheck;\n    }\n\n    async getAirtableRecords() {\n        const response = await this.httpGet('/airtable_scraper/records');\n        if(!response || !(\"records\" in response) || !(\"updated_at\" in response)) {\n            return [];\n        }\n        const airtable_records = response.records!.map((item: Record<string, any>)=>{ \n            // Convert response to AirtableRecord type\n            const record: AirtableRecord = { \n                source_name: item.SOURCE_NAME ? item.SOURCE_NAME[0] : null,\n                lead_org: item.LEAD_ORG ? item.LEAD_ORG[0] : null,\n                first_author: item.FIRST_AUTHOR ? item.FIRST_AUTHOR[0]: null,\n                source_type: item.SOURCE_TYPE ? item.SOURCE_TYPE[0]: null,\n                study_status: item.STUDY_STATUS ? item.STUDY_STATUS[0]: null,\n                study_type: item.STUDY_TYPE,\n                test_type: item.TEST_TYPE,\n                isotypes_reported: item.ISOTYPES,\n                manufacturer: item.MANUFACTURER,\n                approving_regulator: item.APPROVAL,\n                sensitivity: item.SENSITIVITY,\n                specificity: item.SPECIFICITY,\n                publish_date: item.PUB_DATE,\n                publisher: item.PUBLISHER,\n                country: item.COUNTRY ? item.COUNTRY[0] : null,\n                state: item.STATE,\n                city: item.CITY,\n                population_group: item.POPULATION_GROUP,\n                sex: item.SEX,\n                age: item.AGE,\n                denominator: item.DENOMINATOR,\n                summary: item.SUMMARY,\n                seroprevalence: item.SERUM_POS_PREVALENCE,\n                sample_size: item.SAMPLE_SIZE,\n                sampling_method: item.SAMPLING,\n                sampling_start_date: item.SAMPLING_START,\n                sampling_end_date: item.SAMPLING_END,\n                risk_of_bias: item.OVERALL_RISK_OF_BIAS ? item.OVERALL_RISK_OF_BIAS[0] : null,\n                url: item.URL ? item.URL[0] : null\n            };\n\n            return record; \n        });\n        \n        // Remove timestamp from updated at string\n        const updated_at_words = response.updated_at!.split(\" \", 4);\n        const updated_at_string = updated_at_words.join(\" \");\n\n        return {\n            airtable_records,\n            updated_at: updated_at_string\n        };\n    }\n}","import React, { useContext, useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport About from './components/pages/About';\nimport Dashboard from \"./components/pages/Dashboard/Dashboard\";\nimport Data from './components/pages/Data';\nimport { NavBar } from \"./components/shared/NavBar\";\nimport { AppContext } from \"./context\";\nimport httpClient from \"./httpClient\";\nimport { setLanguageType } from \"./utils/translate/translateService\";\n\nfunction App() {\n  const [{ language }, dispatch] = useContext(AppContext);\n  // DATA\n  useEffect(() => {\n    const api = new httpClient()\n    const getAirtableRecords = async () => {\n      const response = await api.getAirtableRecords()\n      dispatch({\n        type: 'GET_AIRTABLE_RECORDS',\n        payload: response\n      });\n    }\n    getAirtableRecords();\n    setLanguageType(language);\n  }, [dispatch, language])\n\n  // ROUTING TABS\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Switch>\n        <Route path=\"/About\">\n          <About />\n        </Route>\n        <Route path=\"/Dashboard\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/Data\">\n          <Data />\n        </Route>\n        <Redirect exact from=\"/\" to=\"/Dashboard\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\nimport { AppContextProvider } from './context';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <AppContextProvider>\n        <App />\n      </AppContextProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}